ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"alp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.parse_op_return_tag,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	parse_op_return_tag:
  26              	.LVL0:
  27              	.LFB14:
  28              		.file 1 "../../shields/Murata/src/alp.c"
   1:../../shields/Murata/src/alp.c **** /*! \file alp.c
   2:../../shields/Murata/src/alp.c ****  *
   3:../../shields/Murata/src/alp.c **** 
   4:../../shields/Murata/src/alp.c ****  *  \copyright (C) Copyright 2015 University of Antwerp and others (http://oss-7.cosys.be)
   5:../../shields/Murata/src/alp.c ****  *
   6:../../shields/Murata/src/alp.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
   7:../../shields/Murata/src/alp.c ****  * you may not use this file except in compliance with the License.
   8:../../shields/Murata/src/alp.c ****  * You may obtain a copy of the License at
   9:../../shields/Murata/src/alp.c ****  *
  10:../../shields/Murata/src/alp.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  11:../../shields/Murata/src/alp.c ****  *
  12:../../shields/Murata/src/alp.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../../shields/Murata/src/alp.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  14:../../shields/Murata/src/alp.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../../shields/Murata/src/alp.c ****  * See the License for the specific language governing permissions and
  16:../../shields/Murata/src/alp.c ****  * limitations under the License.
  17:../../shields/Murata/src/alp.c ****  *
  18:../../shields/Murata/src/alp.c ****  *  \author glenn.ergeerts@uantwerpen.be
  19:../../shields/Murata/src/alp.c ****  *  \author maarten.weyn@uantwerpen.be
  20:../../shields/Murata/src/alp.c ****  *
  21:../../shields/Murata/src/alp.c ****  */
  22:../../shields/Murata/src/alp.c **** 
  23:../../shields/Murata/src/alp.c **** #include "stdlib.h"
  24:../../shields/Murata/src/alp.c **** //#include "debug.h"
  25:../../shields/Murata/src/alp.c **** #include "errors.h"
  26:../../shields/Murata/src/alp.c **** 
  27:../../shields/Murata/src/alp.c **** #include "alp.h"
  28:../../shields/Murata/src/alp.c **** #include "dae.h"
  29:../../shields/Murata/src/alp.c **** #include "fifo.h"
  30:../../shields/Murata/src/alp.c **** #include "d7ap.h"
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 2


  31:../../shields/Murata/src/alp.c **** //#include "log.h"
  32:../../shields/Murata/src/alp.c **** #include "lorawan_stack.h"
  33:../../shields/Murata/src/alp.c **** 
  34:../../shields/Murata/src/alp.c **** #if defined(FRAMEWORK_LOG_ENABLED) && defined(FRAMEWORK_ALP_LOG_ENABLED)
  35:../../shields/Murata/src/alp.c ****   #define DPRINT(...) log_print_stack_string(LOG_STACK_ALP, __VA_ARGS__)
  36:../../shields/Murata/src/alp.c **** #else
  37:../../shields/Murata/src/alp.c ****   #define DPRINT(...)
  38:../../shields/Murata/src/alp.c **** #endif
  39:../../shields/Murata/src/alp.c **** 
  40:../../shields/Murata/src/alp.c **** 
  41:../../shields/Murata/src/alp.c **** alp_operation_t alp_get_operation(uint8_t* alp_command)
  42:../../shields/Murata/src/alp.c **** {
  43:../../shields/Murata/src/alp.c ****     alp_control_t alp_ctrl;
  44:../../shields/Murata/src/alp.c ****     alp_ctrl.raw = (*alp_command);
  45:../../shields/Murata/src/alp.c ****     return alp_ctrl.operation;
  46:../../shields/Murata/src/alp.c **** }
  47:../../shields/Murata/src/alp.c **** 
  48:../../shields/Murata/src/alp.c **** uint32_t alp_parse_length_operand(fifo_t* cmd_fifo) {
  49:../../shields/Murata/src/alp.c ****   uint8_t len = 0;
  50:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&len, 1);
  51:../../shields/Murata/src/alp.c ****   uint8_t field_len = len >> 6;
  52:../../shields/Murata/src/alp.c ****   if(field_len == 0)
  53:../../shields/Murata/src/alp.c ****     return (uint32_t)len;
  54:../../shields/Murata/src/alp.c **** 
  55:../../shields/Murata/src/alp.c ****   uint32_t full_length = (len & 0x3F) << ( 8 * field_len); // mask field length specificier bits an
  56:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
  57:../../shields/Murata/src/alp.c ****   return full_length;
  58:../../shields/Murata/src/alp.c **** }
  59:../../shields/Murata/src/alp.c **** 
  60:../../shields/Murata/src/alp.c **** void alp_append_length_operand(fifo_t* fifo, uint32_t length) {
  61:../../shields/Murata/src/alp.c ****   if(length < 64) {
  62:../../shields/Murata/src/alp.c ****     // can be coded in one byte
  63:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length, 1) == oss7SUCCESS);
  64:../../shields/Murata/src/alp.c ****     return;
  65:../../shields/Murata/src/alp.c ****   }
  66:../../shields/Murata/src/alp.c **** 
  67:../../shields/Murata/src/alp.c ****   uint8_t size = 1;
  68:../../shields/Murata/src/alp.c ****   if(length > 0x3FFF)
  69:../../shields/Murata/src/alp.c ****     size = 2;
  70:../../shields/Murata/src/alp.c ****   if(length > 0x3FFFFF)
  71:../../shields/Murata/src/alp.c ****     size = 3;
  72:../../shields/Murata/src/alp.c **** 
  73:../../shields/Murata/src/alp.c ****   uint8_t byte = 0;
  74:../../shields/Murata/src/alp.c ****   byte += (size << 6); // length specifier bits
  75:../../shields/Murata/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
  76:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
  77:../../shields/Murata/src/alp.c ****   do {
  78:../../shields/Murata/src/alp.c ****     size--;
  79:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
  80:../../shields/Murata/src/alp.c ****   } while(size > 0);
  81:../../shields/Murata/src/alp.c **** }
  82:../../shields/Murata/src/alp.c **** 
  83:../../shields/Murata/src/alp.c **** alp_operand_file_offset_t alp_parse_file_offset_operand(fifo_t* cmd_fifo) {
  84:../../shields/Murata/src/alp.c ****   alp_operand_file_offset_t operand;
  85:../../shields/Murata/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
  86:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
  87:../../shields/Murata/src/alp.c ****   return operand;
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 3


  88:../../shields/Murata/src/alp.c **** }
  89:../../shields/Murata/src/alp.c **** 
  90:../../shields/Murata/src/alp.c **** alp_operand_file_header_t alp_parse_file_header_operand(fifo_t* cmd_fifo) {
  91:../../shields/Murata/src/alp.c ****   alp_operand_file_header_t operand;
  92:../../shields/Murata/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
  93:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
  94:../../shields/Murata/src/alp.c **** 
  95:../../shields/Murata/src/alp.c ****   // convert to little endian (native)
  96:../../shields/Murata/src/alp.c ****   operand.file_header.length = __builtin_bswap32(operand.file_header.length);
  97:../../shields/Murata/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
  98:../../shields/Murata/src/alp.c ****   return operand;
  99:../../shields/Murata/src/alp.c **** }
 100:../../shields/Murata/src/alp.c **** 
 101:../../shields/Murata/src/alp.c **** void alp_append_file_offset_operand(fifo_t* fifo, uint8_t file_id, uint32_t offset) {
 102:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 103:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 104:../../shields/Murata/src/alp.c **** }
 105:../../shields/Murata/src/alp.c **** 
 106:../../shields/Murata/src/alp.c **** void alp_append_forward_action(fifo_t* fifo, uint8_t itf_id, uint8_t *config, uint8_t config_len) {
 107:../../shields/Murata/src/alp.c ****   assert(config!=NULL);
 108:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 109:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 110:../../shields/Murata/src/alp.c **** 
 111:../../shields/Murata/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
 112:../../shields/Murata/src/alp.c ****   {
 113:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->qos.raw) == oss7SUCCESS);
 114:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 115:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 116:../../shields/Murata/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 117:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.access_class) == oss7SUC
 118:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 119:../../shields/Murata/src/alp.c ****   }
 120:../../shields/Murata/src/alp.c ****   else if(itf_id == ALP_ITF_ID_LORAWAN_ABP)
 121:../../shields/Murata/src/alp.c ****   {
 122:../../shields/Murata/src/alp.c ****     uint8_t control_byte = ((lorawan_session_config_abp_t*)config)->request_ack << 1;
 123:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 124:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 125:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 126:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 127:../../shields/Murata/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 128:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 129:../../shields/Murata/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 130:../../shields/Murata/src/alp.c **** 
 131:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&network_id, 4) == oss7SUCCESS);
 132:../../shields/Murata/src/alp.c ****   }
 133:../../shields/Murata/src/alp.c ****   else if(itf_id == ALP_ITF_ID_LORAWAN_OTAA)
 134:../../shields/Murata/src/alp.c ****   {
 135:../../shields/Murata/src/alp.c ****     uint8_t control_byte = ((lorawan_session_config_otaa_t*)config)->request_ack << 1;
 136:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 137:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 138:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 139:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 140:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 141:../../shields/Murata/src/alp.c ****   }
 142:../../shields/Murata/src/alp.c ****   else
 143:../../shields/Murata/src/alp.c ****   {
 144:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, config, config_len) == oss7SUCCESS);
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 4


 145:../../shields/Murata/src/alp.c ****   }
 146:../../shields/Murata/src/alp.c **** 
 147:../../shields/Murata/src/alp.c ****   DPRINT("FORWARD");
 148:../../shields/Murata/src/alp.c **** }
 149:../../shields/Murata/src/alp.c **** 
 150:../../shields/Murata/src/alp.c **** void alp_append_return_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t le
 151:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss7SUCCESS);
 152:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 153:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 154:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, length);
 155:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 156:../../shields/Murata/src/alp.c **** }
 157:../../shields/Murata/src/alp.c **** 
 158:../../shields/Murata/src/alp.c **** static void append_tag_response(fifo_t* fifo, uint8_t tag_id, bool eop, bool error) {
 159:../../shields/Murata/src/alp.c ****   // fill response with tag response
 160:../../shields/Murata/src/alp.c ****   uint8_t op_return_tag = ALP_OP_RETURN_TAG | (eop << 7);
 161:../../shields/Murata/src/alp.c ****   op_return_tag |= (error << 6);
 162:../../shields/Murata/src/alp.c ****   error_t err = fifo_put_byte(fifo, op_return_tag); assert(err == oss7SUCCESS);
 163:../../shields/Murata/src/alp.c ****   err = fifo_put_byte(fifo, tag_id); assert(err == oss7SUCCESS);
 164:../../shields/Murata/src/alp.c **** }
 165:../../shields/Murata/src/alp.c **** 
 166:../../shields/Murata/src/alp.c **** 
 167:../../shields/Murata/src/alp.c **** static void add_interface_status_action(fifo_t* alp_response_fifo, uint8_t itf_id, uint8_t *status,
 168:../../shields/Murata/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
 169:../../shields/Murata/src/alp.c ****   {
 170:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ALP_OP_RETURN_STATUS + (1 << 6));
 171:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ALP_ITF_ID_D7ASP);
 172:../../shields/Murata/src/alp.c ****     //TODO insert status len
 173:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->channel.channel_header);
 174:../../shields/Murata/src/alp.c ****     uint16_t center_freq_index_be = __builtin_bswap16(((d7ap_session_result_t*)status)->channel.cen
 175:../../shields/Murata/src/alp.c ****     fifo_put(alp_response_fifo, (uint8_t*)&center_freq_index_be, 2);
 176:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->rx_level);
 177:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->link_budget);
 178:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->target_rx_level);
 179:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->status.raw);
 180:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->fifo_token);
 181:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->seqnr);
 182:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->response_to);
 183:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.ctrl.raw);
 184:../../shields/Murata/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.access_class);
 185:../../shields/Murata/src/alp.c ****     uint8_t address_len = d7ap_addressee_id_length(((d7ap_session_result_t*)status)->addressee.ctrl
 186:../../shields/Murata/src/alp.c ****     fifo_put(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.id, address_len);
 187:../../shields/Murata/src/alp.c ****   }
 188:../../shields/Murata/src/alp.c **** }
 189:../../shields/Murata/src/alp.c **** 
 190:../../shields/Murata/src/alp.c **** 
 191:../../shields/Murata/src/alp.c **** static void parse_operand_file_data(fifo_t* fifo, alp_action_t* action) {
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.file_offset = alp_parse_file_offset_operand(fifo);
 193:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 194:../../shields/Murata/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 195:../../shields/Murata/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 196:../../shields/Murata/src/alp.c **** }
 197:../../shields/Murata/src/alp.c **** 
 198:../../shields/Murata/src/alp.c **** static void parse_op_write_file_data(fifo_t* fifo, alp_action_t* action) {
 199:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 200:../../shields/Murata/src/alp.c ****   DPRINT("parsed write file data file %i, len %i", action->file_data_operand.file_offset.file_id, a
 201:../../shields/Murata/src/alp.c **** }
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 5


 202:../../shields/Murata/src/alp.c **** 
 203:../../shields/Murata/src/alp.c **** 
 204:../../shields/Murata/src/alp.c **** static void parse_op_return_file_data(fifo_t* fifo, alp_action_t* action) {
 205:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 206:../../shields/Murata/src/alp.c ****   DPRINT("parsed return file data file %i, len %i", action->file_data_operand.file_offset.file_id, 
 207:../../shields/Murata/src/alp.c **** }
 208:../../shields/Murata/src/alp.c **** 
 209:../../shields/Murata/src/alp.c **** static void parse_op_return_tag(fifo_t* fifo, alp_action_t* action, bool b6, bool b7) {
  29              		.loc 1 209 87 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 209 87 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 210:../../shields/Murata/src/alp.c ****   action->tag_response.completed = b7;
  39              		.loc 1 210 3 is_stmt 1 view .LVU2
  40              		.loc 1 210 34 is_stmt 0 view .LVU3
  41 0002 0B71     		strb	r3, [r1, #4]
 211:../../shields/Murata/src/alp.c ****   action->tag_response.error = b6;
  42              		.loc 1 211 3 is_stmt 1 view .LVU4
  43              		.loc 1 211 30 is_stmt 0 view .LVU5
  44 0004 4A71     		strb	r2, [r1, #5]
 212:../../shields/Murata/src/alp.c ****   assert(fifo_pop(fifo, &action->tag_response.tag_id, 1) == oss7SUCCESS);
  45              		.loc 1 212 3 is_stmt 1 view .LVU6
  46 0006 0122     		movs	r2, #1
  47              	.LVL1:
  48              		.loc 1 212 3 is_stmt 0 view .LVU7
  49 0008 0631     		adds	r1, r1, #6
  50              	.LVL2:
  51              		.loc 1 212 3 view .LVU8
  52 000a FFF7FEFF 		bl	fifo_pop
  53              	.LVL3:
  54              		.loc 1 212 3 view .LVU9
  55 000e 00B9     		cbnz	r0, .L4
 213:../../shields/Murata/src/alp.c ****   DPRINT("parsed return tag %i, eop %i, err %i", action->tag_response.tag_id, action->tag_response.
 214:../../shields/Murata/src/alp.c **** }
  56              		.loc 1 214 1 view .LVU10
  57 0010 08BD     		pop	{r3, pc}
  58              	.L4:
 212:../../shields/Murata/src/alp.c ****   assert(fifo_pop(fifo, &action->tag_response.tag_id, 1) == oss7SUCCESS);
  59              		.loc 1 212 3 discriminator 1 view .LVU11
  60 0012 034B     		ldr	r3, .L5
  61 0014 034A     		ldr	r2, .L5+4
  62 0016 D421     		movs	r1, #212
  63 0018 0348     		ldr	r0, .L5+8
  64 001a FFF7FEFF 		bl	__assert_func
  65              	.LVL4:
  66              	.L6:
  67 001e 00BF     		.align	2
  68              	.L5:
  69 0020 00000000 		.word	.LC0
  70 0024 00000000 		.word	.LANCHOR0
  71 0028 40000000 		.word	.LC1
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 6


  72              		.cfi_endproc
  73              	.LFE14:
  75              		.section	.text.parse_op_return_status,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	parse_op_return_status:
  83              	.LVL5:
  84              	.LFB15:
 215:../../shields/Murata/src/alp.c **** 
 216:../../shields/Murata/src/alp.c **** static void parse_op_return_status(fifo_t* fifo, alp_action_t* action, bool b6, bool b7) {
  85              		.loc 1 216 90 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 24
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 216 90 is_stmt 0 view .LVU13
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
  97 0002 86B0     		sub	sp, sp, #24
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 40
 217:../../shields/Murata/src/alp.c ****   assert(b6 && !b7); // TODO implement action status
 100              		.loc 1 217 3 is_stmt 1 view .LVU14
 101 0004 AAB1     		cbz	r2, .L8
 102 0006 0446     		mov	r4, r0
 103 0008 0D46     		mov	r5, r1
 104              		.loc 1 217 3 is_stmt 0 discriminator 2 view .LVU15
 105 000a 93B9     		cbnz	r3, .L8
 218:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
 106              		.loc 1 218 3 is_stmt 1 view .LVU16
 219:../../shields/Murata/src/alp.c ****   assert(fifo_pop(fifo, &itf_id, 1) == oss7SUCCESS);
 107              		.loc 1 219 3 view .LVU17
 108 000c 0122     		movs	r2, #1
 109              	.LVL6:
 110              		.loc 1 219 3 is_stmt 0 view .LVU18
 111 000e 0DF11701 		add	r1, sp, #23
 112              	.LVL7:
 113              		.loc 1 219 3 view .LVU19
 114 0012 FFF7FEFF 		bl	fifo_pop
 115              	.LVL8:
 116              		.loc 1 219 3 view .LVU20
 117 0016 90B9     		cbnz	r0, .L22
 220:../../shields/Murata/src/alp.c ****   // TODO uint32_t itf_len = parse_length_operand(fifo);
 221:../../shields/Murata/src/alp.c ****   // assert(itf_len == sizeof(d7ap_session_result_t));
 222:../../shields/Murata/src/alp.c ****   action->status.type=itf_id;
 118              		.loc 1 222 3 is_stmt 1 view .LVU21
 119              		.loc 1 222 22 is_stmt 0 view .LVU22
 120 0018 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 121 001c 85F80431 		strb	r3, [r5, #260]
 223:../../shields/Murata/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 7


 122              		.loc 1 223 3 is_stmt 1 view .LVU23
 123              		.loc 1 223 6 is_stmt 0 view .LVU24
 124 0020 D72B     		cmp	r3, #215
 125 0022 12D0     		beq	.L23
 224:../../shields/Murata/src/alp.c ****   {
 225:../../shields/Murata/src/alp.c ****     d7ap_session_result_t interface_status =  *((d7ap_session_result_t*)action->status.data);
 226:../../shields/Murata/src/alp.c **** 
 227:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.channel.channel_header, 1);
 228:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, (uint8_t*)&interface_status.channel.center_freq_index, 2);
 229:../../shields/Murata/src/alp.c ****     interface_status.channel.center_freq_index = __builtin_bswap16(interface_status.channel.center_
 230:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.rx_level, 1);
 231:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.link_budget, 1);
 232:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.target_rx_level, 1);
 233:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.status.raw, 1);
 234:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.fifo_token, 1);
 235:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.seqnr, 1);
 236:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.response_to, 1);
 237:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.addressee.ctrl.raw, 1);
 238:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.addressee.access_class, 1);
 239:../../shields/Murata/src/alp.c ****     uint8_t addressee_len = d7ap_addressee_id_length(interface_status.addressee.ctrl.id_type);
 240:../../shields/Murata/src/alp.c ****     assert(fifo_pop(fifo, interface_status.addressee.id, addressee_len) == oss7SUCCESS);
 241:../../shields/Murata/src/alp.c ****   }
 242:../../shields/Murata/src/alp.c ****   else if ( (itf_id == ALP_ITF_ID_LORAWAN_OTAA) || (itf_id == ALP_ITF_ID_LORAWAN_ABP))
 126              		.loc 1 242 8 is_stmt 1 view .LVU25
 127              		.loc 1 242 49 is_stmt 0 view .LVU26
 128 0024 023B     		subs	r3, r3, #2
 129 0026 DBB2     		uxtb	r3, r3
 130              		.loc 1 242 11 view .LVU27
 131 0028 012B     		cmp	r3, #1
 132 002a 40F28480 		bls	.L24
 133              	.LVL9:
 134              	.L7:
 243:../../shields/Murata/src/alp.c ****   {
 244:../../shields/Murata/src/alp.c ****     lorawan_session_result_t interface_status = *((lorawan_session_result_t*)action->status.data);
 245:../../shields/Murata/src/alp.c ****     fifo_skip(fifo,1); //size
 246:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.attempts, 1);
 247:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.error_state, 1);
 248:../../shields/Murata/src/alp.c ****   }
 249:../../shields/Murata/src/alp.c **** 
 250:../../shields/Murata/src/alp.c ****   DPRINT("parsed interface status");
 251:../../shields/Murata/src/alp.c **** }
 135              		.loc 1 251 1 view .LVU28
 136 002e 06B0     		add	sp, sp, #24
 137              	.LCFI3:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 16
 140              		@ sp needed
 141 0030 70BD     		pop	{r4, r5, r6, pc}
 142              	.LVL10:
 143              	.L8:
 144              	.LCFI4:
 145              		.cfi_restore_state
 217:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
 146              		.loc 1 217 3 discriminator 3 view .LVU29
 147 0032 4A4B     		ldr	r3, .L25
 148              	.LVL11:
 217:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 8


 149              		.loc 1 217 3 discriminator 3 view .LVU30
 150 0034 4A4A     		ldr	r2, .L25+4
 151              	.LVL12:
 217:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
 152              		.loc 1 217 3 discriminator 3 view .LVU31
 153 0036 D921     		movs	r1, #217
 154              	.LVL13:
 217:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
 155              		.loc 1 217 3 discriminator 3 view .LVU32
 156 0038 4A48     		ldr	r0, .L25+8
 157              	.LVL14:
 217:../../shields/Murata/src/alp.c ****   uint8_t itf_id;
 158              		.loc 1 217 3 discriminator 3 view .LVU33
 159 003a FFF7FEFF 		bl	__assert_func
 160              	.LVL15:
 161              	.L22:
 219:../../shields/Murata/src/alp.c ****   // TODO uint32_t itf_len = parse_length_operand(fifo);
 162              		.loc 1 219 3 discriminator 1 view .LVU34
 163 003e 4A4B     		ldr	r3, .L25+12
 164 0040 474A     		ldr	r2, .L25+4
 165 0042 DB21     		movs	r1, #219
 166 0044 4748     		ldr	r0, .L25+8
 167 0046 FFF7FEFF 		bl	__assert_func
 168              	.LVL16:
 169              	.L23:
 170              	.LBB6:
 225:../../shields/Murata/src/alp.c **** 
 171              		.loc 1 225 5 is_stmt 1 view .LVU35
 225:../../shields/Murata/src/alp.c **** 
 172              		.loc 1 225 27 is_stmt 0 view .LVU36
 173 004a 6E46     		mov	r6, sp
 174 004c 55F8040F 		ldr	r0, [r5, #4]!	@ unaligned
 175              	.LVL17:
 225:../../shields/Murata/src/alp.c **** 
 176              		.loc 1 225 27 view .LVU37
 177 0050 6968     		ldr	r1, [r5, #4]	@ unaligned
 178 0052 AA68     		ldr	r2, [r5, #8]	@ unaligned
 179 0054 EB68     		ldr	r3, [r5, #12]	@ unaligned
 180 0056 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 181 0058 2869     		ldr	r0, [r5, #16]	@ unaligned
 182 005a 3060     		str	r0, [r6]
 183 005c AA8A     		ldrh	r2, [r5, #20]	@ unaligned
 184 005e AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 185 0060 B280     		strh	r2, [r6, #4]	@ unaligned
 186 0062 B371     		strb	r3, [r6, #6]
 227:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, (uint8_t*)&interface_status.channel.center_freq_index, 2);
 187              		.loc 1 227 5 is_stmt 1 view .LVU38
 188 0064 0122     		movs	r2, #1
 189 0066 6946     		mov	r1, sp
 190 0068 2046     		mov	r0, r4
 191 006a FFF7FEFF 		bl	fifo_pop
 192              	.LVL18:
 228:../../shields/Murata/src/alp.c ****     interface_status.channel.center_freq_index = __builtin_bswap16(interface_status.channel.center_
 193              		.loc 1 228 5 view .LVU39
 194 006e 0222     		movs	r2, #2
 195 0070 0DEB0201 		add	r1, sp, r2
 196 0074 2046     		mov	r0, r4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 9


 197 0076 FFF7FEFF 		bl	fifo_pop
 198              	.LVL19:
 229:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.rx_level, 1);
 199              		.loc 1 229 5 view .LVU40
 229:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.rx_level, 1);
 200              		.loc 1 229 50 is_stmt 0 view .LVU41
 201 007a BDF80230 		ldrh	r3, [sp, #2]
 202 007e 5BBA     		rev16	r3, r3
 229:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.rx_level, 1);
 203              		.loc 1 229 48 view .LVU42
 204 0080 ADF80230 		strh	r3, [sp, #2]	@ movhi
 230:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.link_budget, 1);
 205              		.loc 1 230 5 is_stmt 1 view .LVU43
 206 0084 0122     		movs	r2, #1
 207 0086 01A9     		add	r1, sp, #4
 208 0088 2046     		mov	r0, r4
 209 008a FFF7FEFF 		bl	fifo_pop
 210              	.LVL20:
 231:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.target_rx_level, 1);
 211              		.loc 1 231 5 view .LVU44
 212 008e 0122     		movs	r2, #1
 213 0090 0DF10501 		add	r1, sp, #5
 214 0094 2046     		mov	r0, r4
 215 0096 FFF7FEFF 		bl	fifo_pop
 216              	.LVL21:
 232:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.status.raw, 1);
 217              		.loc 1 232 5 view .LVU45
 218 009a 0122     		movs	r2, #1
 219 009c 0DF10701 		add	r1, sp, #7
 220 00a0 2046     		mov	r0, r4
 221 00a2 FFF7FEFF 		bl	fifo_pop
 222              	.LVL22:
 233:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.fifo_token, 1);
 223              		.loc 1 233 5 view .LVU46
 224 00a6 0122     		movs	r2, #1
 225 00a8 02A9     		add	r1, sp, #8
 226 00aa 2046     		mov	r0, r4
 227 00ac FFF7FEFF 		bl	fifo_pop
 228              	.LVL23:
 234:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.seqnr, 1);
 229              		.loc 1 234 5 view .LVU47
 230 00b0 0122     		movs	r2, #1
 231 00b2 0DF10901 		add	r1, sp, #9
 232 00b6 2046     		mov	r0, r4
 233 00b8 FFF7FEFF 		bl	fifo_pop
 234              	.LVL24:
 235:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.response_to, 1);
 235              		.loc 1 235 5 view .LVU48
 236 00bc 0122     		movs	r2, #1
 237 00be 0DF10A01 		add	r1, sp, #10
 238 00c2 2046     		mov	r0, r4
 239 00c4 FFF7FEFF 		bl	fifo_pop
 240              	.LVL25:
 236:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.addressee.ctrl.raw, 1);
 241              		.loc 1 236 5 view .LVU49
 242 00c8 0122     		movs	r2, #1
 243 00ca 0DF10B01 		add	r1, sp, #11
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 10


 244 00ce 2046     		mov	r0, r4
 245 00d0 FFF7FEFF 		bl	fifo_pop
 246              	.LVL26:
 237:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.addressee.access_class, 1);
 247              		.loc 1 237 5 view .LVU50
 248 00d4 0122     		movs	r2, #1
 249 00d6 0DF10D01 		add	r1, sp, #13
 250 00da 2046     		mov	r0, r4
 251 00dc FFF7FEFF 		bl	fifo_pop
 252              	.LVL27:
 238:../../shields/Murata/src/alp.c ****     uint8_t addressee_len = d7ap_addressee_id_length(interface_status.addressee.ctrl.id_type);
 253              		.loc 1 238 5 view .LVU51
 254 00e0 0122     		movs	r2, #1
 255 00e2 0DF10E01 		add	r1, sp, #14
 256 00e6 2046     		mov	r0, r4
 257 00e8 FFF7FEFF 		bl	fifo_pop
 258              	.LVL28:
 239:../../shields/Murata/src/alp.c ****     assert(fifo_pop(fifo, interface_status.addressee.id, addressee_len) == oss7SUCCESS);
 259              		.loc 1 239 5 view .LVU52
 239:../../shields/Murata/src/alp.c ****     assert(fifo_pop(fifo, interface_status.addressee.id, addressee_len) == oss7SUCCESS);
 260              		.loc 1 239 85 is_stmt 0 view .LVU53
 261 00ec 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 262 00f0 C3F30113 		ubfx	r3, r3, #4, #2
 263              	.LVL29:
 264              	.LBB7:
 265              	.LBI7:
 266              		.file 2 "../../shields/Murata/inc/d7ap.h"
   1:../../shields/Murata/inc/d7ap.h **** 
   2:../../shields/Murata/inc/d7ap.h **** /* * OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra
   3:../../shields/Murata/inc/d7ap.h ****  * lowpower wireless sensor communication
   4:../../shields/Murata/inc/d7ap.h ****  *
   5:../../shields/Murata/inc/d7ap.h ****  * Copyright 2018 University of Antwerp
   6:../../shields/Murata/inc/d7ap.h ****  * Copyright 2018 CORTUS SA
   7:../../shields/Murata/inc/d7ap.h ****  *
   8:../../shields/Murata/inc/d7ap.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
   9:../../shields/Murata/inc/d7ap.h ****  * you may not use this file except in compliance with the License.
  10:../../shields/Murata/inc/d7ap.h ****  * You may obtain a copy of the License at
  11:../../shields/Murata/inc/d7ap.h ****  *
  12:../../shields/Murata/inc/d7ap.h ****  *   http://www.apache.org/licenses/LICENSE-2.0
  13:../../shields/Murata/inc/d7ap.h ****  *
  14:../../shields/Murata/inc/d7ap.h ****  * Unless required by applicable law or agreed to in writing, software
  15:../../shields/Murata/inc/d7ap.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  16:../../shields/Murata/inc/d7ap.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  17:../../shields/Murata/inc/d7ap.h ****  * See the License for the specific language governing permissions and
  18:../../shields/Murata/inc/d7ap.h ****  * limitations under the License.
  19:../../shields/Murata/inc/d7ap.h ****  *
  20:../../shields/Murata/inc/d7ap.h ****  * \author philippe.nunes@cortus.com
  21:../../shields/Murata/inc/d7ap.h ****  */
  22:../../shields/Murata/inc/d7ap.h **** 
  23:../../shields/Murata/inc/d7ap.h **** /**
  24:../../shields/Murata/inc/d7ap.h ****  * @file d7ap.h
  25:../../shields/Murata/inc/d7ap.h ****  * @addtogroup d7ap
  26:../../shields/Murata/inc/d7ap.h ****  * @ingroup framework
  27:../../shields/Murata/inc/d7ap.h ****  * @{
  28:../../shields/Murata/inc/d7ap.h ****  * @brief D7AP public types (used for modem and/or D7AP stack itself)
  29:../../shields/Murata/inc/d7ap.h ****  *
  30:../../shields/Murata/inc/d7ap.h ****  */
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 11


  31:../../shields/Murata/inc/d7ap.h **** 
  32:../../shields/Murata/inc/d7ap.h **** #ifndef D7AP_H
  33:../../shields/Murata/inc/d7ap.h **** #define D7AP_H
  34:../../shields/Murata/inc/d7ap.h **** 
  35:../../shields/Murata/inc/d7ap.h **** #include "types.h"
  36:../../shields/Murata/inc/d7ap.h **** #include "assert.h"
  37:../../shields/Murata/inc/d7ap.h **** 
  38:../../shields/Murata/inc/d7ap.h **** #define D7AP_MAX_CLIENT_COUNT 8
  39:../../shields/Murata/inc/d7ap.h **** 
  40:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_UID_FILE_ID 0x00
  41:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_UID_SIZE 8
  42:../../shields/Murata/inc/d7ap.h **** 
  43:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_FILE_ID 0x02
  44:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE 6
  45:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_GIT_SHA1_SIZE 7
  46:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_SIZE (2 + D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE + D7A_FILE_FIRM
  47:../../shields/Murata/inc/d7ap.h **** 
  48:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_FILE_ID	0x0A
  49:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_SIZE		6
  50:../../shields/Murata/inc/d7ap.h **** 
  51:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_ID 0x20 // the first access class file
  52:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_SIZE 65
  53:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_COUNT 15
  54:../../shields/Murata/inc/d7ap.h **** 
  55:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY		0x0D
  56:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_SIZE	5
  57:../../shields/Murata/inc/d7ap.h **** 
  58:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY		0x0E
  59:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY_SIZE	16
  60:../../shields/Murata/inc/d7ap.h **** 
  61:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG			0x0F
  62:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG_SIZE	2 + (FRAMEWORK_FS_TRUSTED_NODE_TABLE_SIZE)*(D7A_FILE_N
  63:../../shields/Murata/inc/d7ap.h **** 
  64:../../shields/Murata/inc/d7ap.h **** 
  65:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_NBID_ID_LENGTH 1
  66:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_NOID_ID_LENGTH 0
  67:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_UID_ID_LENGTH   8
  68:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_VID_LENGTH      2
  69:../../shields/Murata/inc/d7ap.h **** 
  70:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_IS_BROADCAST(id_type) (id_type == ID_TYPE_NBID || id_type == ID_TYPE_NOID)
  71:../../shields/Murata/inc/d7ap.h **** 
  72:../../shields/Murata/inc/d7ap.h **** #define D7A_PAYLOAD_MAX_SIZE 239 // TODO confirm this value when FEC and security are disabled
  73:../../shields/Murata/inc/d7ap.h **** 
  74:../../shields/Murata/inc/d7ap.h **** 
  75:../../shields/Murata/inc/d7ap.h **** typedef enum {
  76:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_NBID = 0,
  77:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_NOID = 1,
  78:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_UID = 2,
  79:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_VID = 3
  80:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_id_type_t;
  81:../../shields/Murata/inc/d7ap.h **** 
  82:../../shields/Murata/inc/d7ap.h **** typedef enum
  83:../../shields/Murata/inc/d7ap.h **** {
  84:../../shields/Murata/inc/d7ap.h ****     AES_NONE = 0, /* No security */
  85:../../shields/Murata/inc/d7ap.h ****     AES_CTR = 0x01, /* data confidentiality */
  86:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_128 = 0x02, /* data authenticity */
  87:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_64 = 0x03, /* data authenticity */
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 12


  88:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_32 = 0x04, /* data authenticity */
  89:../../shields/Murata/inc/d7ap.h ****     AES_CCM_128 = 0x05, /* data confidentiality and authenticity*/
  90:../../shields/Murata/inc/d7ap.h ****     AES_CCM_64 = 0x06, /* data confidentiality and authenticity*/
  91:../../shields/Murata/inc/d7ap.h ****     AES_CCM_32 = 0x07, /* data confidentiality and authenticity*/
  92:../../shields/Murata/inc/d7ap.h **** } nls_method_t;
  93:../../shields/Murata/inc/d7ap.h **** 
  94:../../shields/Murata/inc/d7ap.h **** typedef struct {
  95:../../shields/Murata/inc/d7ap.h ****     union {
  96:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
  97:../../shields/Murata/inc/d7ap.h ****         struct {
  98:../../shields/Murata/inc/d7ap.h ****             nls_method_t nls_method : 4;
  99:../../shields/Murata/inc/d7ap.h ****             d7ap_addressee_id_type_t id_type : 2;
 100:../../shields/Murata/inc/d7ap.h ****             uint8_t _rfu : 2;
 101:../../shields/Murata/inc/d7ap.h ****         };
 102:../../shields/Murata/inc/d7ap.h ****     };
 103:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_ctrl_t;
 104:../../shields/Murata/inc/d7ap.h **** 
 105:../../shields/Murata/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 106:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_ctrl_t ctrl;
 107:../../shields/Murata/inc/d7ap.h ****     union {
 108:../../shields/Murata/inc/d7ap.h ****         uint8_t access_class;
 109:../../shields/Murata/inc/d7ap.h ****         struct {
 110:../../shields/Murata/inc/d7ap.h ****             uint8_t access_mask : 4;
 111:../../shields/Murata/inc/d7ap.h ****             uint8_t access_specifier : 4;
 112:../../shields/Murata/inc/d7ap.h ****         };
 113:../../shields/Murata/inc/d7ap.h ****     };
 114:../../shields/Murata/inc/d7ap.h ****     uint8_t id[8]; // TODO assuming 8 byte id for now
 115:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_t;
 116:../../shields/Murata/inc/d7ap.h **** 
 117:../../shields/Murata/inc/d7ap.h **** typedef struct {
 118:../../shields/Murata/inc/d7ap.h ****     union {
 119:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
 120:../../shields/Murata/inc/d7ap.h ****         struct {
 121:../../shields/Murata/inc/d7ap.h ****             uint8_t _rfu : 4;
 122:../../shields/Murata/inc/d7ap.h ****             bool ucast : 1;
 123:../../shields/Murata/inc/d7ap.h ****             bool retry : 1;
 124:../../shields/Murata/inc/d7ap.h ****             bool missed : 1;
 125:../../shields/Murata/inc/d7ap.h ****             bool nls : 1;
 126:../../shields/Murata/inc/d7ap.h ****         };
 127:../../shields/Murata/inc/d7ap.h ****     };
 128:../../shields/Murata/inc/d7ap.h **** } d7ap_sp_state_t;
 129:../../shields/Murata/inc/d7ap.h **** 
 130:../../shields/Murata/inc/d7ap.h **** typedef struct
 131:../../shields/Murata/inc/d7ap.h **** {
 132:../../shields/Murata/inc/d7ap.h ****     uint8_t channel_header;         /**< PHY layer channel header */
 133:../../shields/Murata/inc/d7ap.h ****     uint16_t center_freq_index;     /**< The center frequency index of the channel id */
 134:../../shields/Murata/inc/d7ap.h **** } d7ap_channel_t;
 135:../../shields/Murata/inc/d7ap.h **** 
 136:../../shields/Murata/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 137:../../shields/Murata/inc/d7ap.h ****     d7ap_channel_t channel;
 138:../../shields/Murata/inc/d7ap.h ****     uint8_t rx_level;
 139:../../shields/Murata/inc/d7ap.h ****     uint8_t link_budget;
 140:../../shields/Murata/inc/d7ap.h ****     uint8_t link_quality;
 141:../../shields/Murata/inc/d7ap.h ****     uint8_t target_rx_level;
 142:../../shields/Murata/inc/d7ap.h ****     d7ap_sp_state_t status;
 143:../../shields/Murata/inc/d7ap.h ****     uint8_t fifo_token;
 144:../../shields/Murata/inc/d7ap.h ****     uint8_t seqnr;
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 13


 145:../../shields/Murata/inc/d7ap.h ****     uint8_t response_to;
 146:../../shields/Murata/inc/d7ap.h ****     bool response_expected;
 147:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_t addressee;
 148:../../shields/Murata/inc/d7ap.h **** } d7ap_session_result_t;
 149:../../shields/Murata/inc/d7ap.h **** 
 150:../../shields/Murata/inc/d7ap.h **** typedef enum  {
 151:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_NO = 0,
 152:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ALL = 1,
 153:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ANY = 2,
 154:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_NO_RPT = 4,
 155:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ON_ERR = 5,
 156:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_PREFERRED = 6,
 157:../../shields/Murata/inc/d7ap.h **** } d7ap_session_resp_mode_t;
 158:../../shields/Murata/inc/d7ap.h **** 
 159:../../shields/Murata/inc/d7ap.h **** typedef enum {
 160:../../shields/Murata/inc/d7ap.h ****     SESSION_RETRY_MODE_NO = 0
 161:../../shields/Murata/inc/d7ap.h **** } d7ap_session_retry_mode_t;
 162:../../shields/Murata/inc/d7ap.h **** 
 163:../../shields/Murata/inc/d7ap.h **** typedef struct {
 164:../../shields/Murata/inc/d7ap.h ****     union {
 165:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
 166:../../shields/Murata/inc/d7ap.h ****         struct {
 167:../../shields/Murata/inc/d7ap.h ****             d7ap_session_resp_mode_t qos_resp_mode : 3;
 168:../../shields/Murata/inc/d7ap.h ****             d7ap_session_retry_mode_t qos_retry_mode: 3;
 169:../../shields/Murata/inc/d7ap.h ****             bool qos_record : 1;
 170:../../shields/Murata/inc/d7ap.h ****             bool qos_stop_on_error : 1;
 171:../../shields/Murata/inc/d7ap.h ****         };
 172:../../shields/Murata/inc/d7ap.h ****     };
 173:../../shields/Murata/inc/d7ap.h **** } d7ap_session_qos_t;
 174:../../shields/Murata/inc/d7ap.h **** 
 175:../../shields/Murata/inc/d7ap.h **** typedef struct {
 176:../../shields/Murata/inc/d7ap.h ****     d7ap_session_qos_t qos;
 177:../../shields/Murata/inc/d7ap.h ****     uint8_t dormant_timeout;
 178:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_t addressee;
 179:../../shields/Murata/inc/d7ap.h **** } d7ap_session_config_t;
 180:../../shields/Murata/inc/d7ap.h **** 
 181:../../shields/Murata/inc/d7ap.h **** typedef void (*d7ap_receive_callback)(uint16_t trans_id, uint8_t* payload, uint8_t len, d7ap_sessio
 182:../../shields/Murata/inc/d7ap.h **** /**
 183:../../shields/Murata/inc/d7ap.h ****  * @brief Called when the stack received an unsolicited message
 184:../../shields/Murata/inc/d7ap.h ****  * @returns true when the unsolicited request will result in a response payload from the upper laye
 185:../../shields/Murata/inc/d7ap.h ****  * the upper layer should return false, so the stack can respond with an ack immediately (if reques
 186:../../shields/Murata/inc/d7ap.h ****  */
 187:../../shields/Murata/inc/d7ap.h **** typedef bool (*d7ap_receive_unsolicited_callback)(uint8_t* payload, uint8_t len, d7ap_session_resul
 188:../../shields/Murata/inc/d7ap.h **** typedef void (*d7ap_transmitted_callback)(uint16_t trans_id, error_t error);
 189:../../shields/Murata/inc/d7ap.h **** 
 190:../../shields/Murata/inc/d7ap.h **** typedef struct{
 191:../../shields/Murata/inc/d7ap.h ****     d7ap_receive_callback  receive_cb;                /*< receive callback,
 192:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, all message received for clientI
 193:../../shields/Murata/inc/d7ap.h ****     d7ap_transmitted_callback transmitted_cb;         /*< send completion callback,
 194:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 195:../../shields/Murata/inc/d7ap.h ****     d7ap_receive_unsolicited_callback unsolicited_cb; /*< unsolicited data callback,
 196:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 197:../../shields/Murata/inc/d7ap.h **** } d7ap_resource_desc_t;
 198:../../shields/Murata/inc/d7ap.h **** 
 199:../../shields/Murata/inc/d7ap.h **** 
 200:../../shields/Murata/inc/d7ap.h **** //=========================== prototypes ======================================
 201:../../shields/Murata/inc/d7ap.h **** /**
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 14


 202:../../shields/Murata/inc/d7ap.h ****  * @brief   Initializes d7a module
 203:../../shields/Murata/inc/d7ap.h ****  */
 204:../../shields/Murata/inc/d7ap.h **** void d7ap_init(void);
 205:../../shields/Murata/inc/d7ap.h **** 
 206:../../shields/Murata/inc/d7ap.h **** 
 207:../../shields/Murata/inc/d7ap.h **** /**
 208:../../shields/Murata/inc/d7ap.h ****  * @brief   Register the client callbacks
 209:../../shields/Murata/inc/d7ap.h ****  *
 210:../../shields/Murata/inc/d7ap.h ****  * @param[in] desc pointer to the client resource
 211:../../shields/Murata/inc/d7ap.h ****  *
 212:../../shields/Murata/inc/d7ap.h ****  * @return  the client Id
 213:../../shields/Murata/inc/d7ap.h ****  */
 214:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_register(d7ap_resource_desc_t* desc);
 215:../../shields/Murata/inc/d7ap.h **** 
 216:../../shields/Murata/inc/d7ap.h **** 
 217:../../shields/Murata/inc/d7ap.h **** /**
 218:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the device address UID/VID
 219:../../shields/Murata/inc/d7ap.h ****  *
 220:../../shields/Murata/inc/d7ap.h ****  * @param[out] *addr   Pointer to the device addressee UID/VID
 221:../../shields/Murata/inc/d7ap.h ****  */
 222:../../shields/Murata/inc/d7ap.h **** void d7ap_get_dev_addr(d7ap_addressee_t* addr);
 223:../../shields/Murata/inc/d7ap.h **** 
 224:../../shields/Murata/inc/d7ap.h **** 
 225:../../shields/Murata/inc/d7ap.h **** /**
 226:../../shields/Murata/inc/d7ap.h ****  * @brief Get the maximum payload size.
 227:../../shields/Murata/inc/d7ap.h ****  *
 228:../../shields/Murata/inc/d7ap.h ****  * @param[in] clientId  The d7A  instance Id.
 229:../../shields/Murata/inc/d7ap.h ****  *
 230:../../shields/Murata/inc/d7ap.h ****  * @returns the maximum payload size in bytes.
 231:../../shields/Murata/inc/d7ap.h ****  */
 232:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_payload_max_size(uint8_t clientId);
 233:../../shields/Murata/inc/d7ap.h **** 
 234:../../shields/Murata/inc/d7ap.h **** 
 235:../../shields/Murata/inc/d7ap.h **** /**
 236:../../shields/Murata/inc/d7ap.h ****  * @brief   Send a packet over DASH7 network
 237:../../shields/Murata/inc/d7ap.h ****  *
 238:../../shields/Murata/inc/d7ap.h ****  * @param[in] clientID  The registered client Id
 239:../../shields/Murata/inc/d7ap.h ****  * @param[in] config    The configuration for the d7a session. Set to NULL to use the current confi
 240:../../shields/Murata/inc/d7ap.h ****  * @param[in] payload   The pointer to the payload buffer
 241:../../shields/Murata/inc/d7ap.h ****  * @param[in] len       The length of the payload
 242:../../shields/Murata/inc/d7ap.h ****  * @param[in] expected_response_len The length of the expected response
 243:../../shields/Murata/inc/d7ap.h ****  * @param[in,out] trans_id   Set the value of this parameter to NULL to cause the function to execu
 244:../../shields/Murata/inc/d7ap.h ****  *                           If this parameter is not NULL, the call executes asynchronously. Upon 
 245:../../shields/Murata/inc/d7ap.h ****  *                           this points to the transaction identifier associated with the asynchro
 246:../../shields/Murata/inc/d7ap.h ****  * @return 0 on success
 247:../../shields/Murata/inc/d7ap.h ****  * @return an error (errno.h) in case of failure
 248:../../shields/Murata/inc/d7ap.h ****  */
 249:../../shields/Murata/inc/d7ap.h **** error_t d7ap_send(uint8_t clientId, d7ap_session_config_t* config, uint8_t* payload,
 250:../../shields/Murata/inc/d7ap.h ****                    uint8_t len, uint8_t expected_response_len, uint16_t* trans_id);
 251:../../shields/Murata/inc/d7ap.h **** 
 252:../../shields/Murata/inc/d7ap.h **** 
 253:../../shields/Murata/inc/d7ap.h **** /**
 254:../../shields/Murata/inc/d7ap.h ****  * @brief   Sets the channels TX power index
 255:../../shields/Murata/inc/d7ap.h ****  *
 256:../../shields/Murata/inc/d7ap.h ****  * @param[in] power  The TX power index (from 1 to 16)
 257:../../shields/Murata/inc/d7ap.h ****  */
 258:../../shields/Murata/inc/d7ap.h **** void d7ap_set_tx_power(uint8_t power);
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 15


 259:../../shields/Murata/inc/d7ap.h **** 
 260:../../shields/Murata/inc/d7ap.h **** 
 261:../../shields/Murata/inc/d7ap.h **** /**
 262:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the channels TX power index
 263:../../shields/Murata/inc/d7ap.h ****  *
 264:../../shields/Murata/inc/d7ap.h ****  * @return  The TX power index (from 1 to 16)
 265:../../shields/Murata/inc/d7ap.h ****  */
 266:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_tx_power(void);
 267:../../shields/Murata/inc/d7ap.h **** 
 268:../../shields/Murata/inc/d7ap.h **** 
 269:../../shields/Murata/inc/d7ap.h **** /**
 270:../../shields/Murata/inc/d7ap.h ****  * @brief   Sets the device access class
 271:../../shields/Murata/inc/d7ap.h ****  *
 272:../../shields/Murata/inc/d7ap.h ****  * @param[in] access_class  The device access class
 273:../../shields/Murata/inc/d7ap.h ****  */
 274:../../shields/Murata/inc/d7ap.h **** void d7ap_set_access_class(uint8_t access_class);
 275:../../shields/Murata/inc/d7ap.h **** 
 276:../../shields/Murata/inc/d7ap.h **** 
 277:../../shields/Murata/inc/d7ap.h **** /**
 278:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the device access class
 279:../../shields/Murata/inc/d7ap.h ****  *
 280:../../shields/Murata/inc/d7ap.h ****  * @return  The device access class
 281:../../shields/Murata/inc/d7ap.h ****  */
 282:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_access_class(void);
 283:../../shields/Murata/inc/d7ap.h **** 
 284:../../shields/Murata/inc/d7ap.h **** /**
 285:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the length of the addressee Id
 286:../../shields/Murata/inc/d7ap.h ****  *
 287:../../shields/Murata/inc/d7ap.h ****  * @param[in] id_type  The addressee Id type
 288:../../shields/Murata/inc/d7ap.h ****  * @return  The length of the addressee Id according the addressee Id type
 289:../../shields/Murata/inc/d7ap.h ****  */
 290:../../shields/Murata/inc/d7ap.h **** static inline uint8_t d7ap_addressee_id_length(d7ap_addressee_id_type_t id_type) {
 267              		.loc 2 290 23 is_stmt 1 view .LVU54
 268              	.LBB8:
 291:../../shields/Murata/inc/d7ap.h ****   switch(id_type)
 269              		.loc 2 291 3 view .LVU55
 270 00f4 032B     		cmp	r3, #3
 271 00f6 07D8     		bhi	.L12
 272 00f8 DFE803F0 		tbb	[pc, r3]
 273              	.L14:
 274 00fc 0F       		.byte	(.L20-.L14)/2
 275 00fd 0D       		.byte	(.L16-.L14)/2
 276 00fe 02       		.byte	(.L15-.L14)/2
 277 00ff 04       		.byte	(.L13-.L14)/2
 278              		.p2align 1
 279              	.L15:
 292:../../shields/Murata/inc/d7ap.h ****   {
 293:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NOID:
 294:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_NOID_ID_LENGTH;
 295:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 296:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_NBID_ID_LENGTH;
 297:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 298:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_UID_ID_LENGTH;
 280              		.loc 2 298 9 view .LVU56
 281              		.loc 2 298 16 is_stmt 0 view .LVU57
 282 0100 0822     		movs	r2, #8
 283 0102 0BE0     		b	.L17
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 16


 284              	.L13:
 299:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 300:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_VID_LENGTH;
 285              		.loc 2 300 9 is_stmt 1 view .LVU58
 286              		.loc 2 300 16 is_stmt 0 view .LVU59
 287 0104 0222     		movs	r2, #2
 288 0106 09E0     		b	.L17
 289              	.L12:
 301:../../shields/Murata/inc/d7ap.h ****       default:
 302:../../shields/Murata/inc/d7ap.h ****         assert(false);
 290              		.loc 2 302 9 is_stmt 1 view .LVU60
 291 0108 184B     		ldr	r3, .L25+16
 292 010a 194A     		ldr	r2, .L25+20
 293 010c 4FF49771 		mov	r1, #302
 294 0110 1848     		ldr	r0, .L25+24
 295 0112 FFF7FEFF 		bl	__assert_func
 296              	.LVL30:
 297              	.L16:
 294:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 298              		.loc 2 294 16 is_stmt 0 view .LVU61
 299 0116 0022     		movs	r2, #0
 300 0118 00E0     		b	.L17
 301              	.L20:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 302              		.loc 2 296 16 view .LVU62
 303 011a 0122     		movs	r2, #1
 304              	.L17:
 305              	.LVL31:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 306              		.loc 2 296 16 view .LVU63
 307              	.LBE8:
 308              	.LBE7:
 240:../../shields/Murata/src/alp.c ****   }
 309              		.loc 1 240 5 is_stmt 1 view .LVU64
 310 011c 0DF10F01 		add	r1, sp, #15
 311 0120 2046     		mov	r0, r4
 312 0122 FFF7FEFF 		bl	fifo_pop
 313              	.LVL32:
 240:../../shields/Murata/src/alp.c ****   }
 314              		.loc 1 240 5 is_stmt 0 view .LVU65
 315 0126 0028     		cmp	r0, #0
 316 0128 81D0     		beq	.L7
 240:../../shields/Murata/src/alp.c ****   }
 317              		.loc 1 240 5 discriminator 1 view .LVU66
 318 012a 134B     		ldr	r3, .L25+28
 319 012c 0C4A     		ldr	r2, .L25+4
 320 012e F021     		movs	r1, #240
 321 0130 0C48     		ldr	r0, .L25+8
 322 0132 FFF7FEFF 		bl	__assert_func
 323              	.LVL33:
 324              	.L24:
 240:../../shields/Murata/src/alp.c ****   }
 325              		.loc 1 240 5 discriminator 1 view .LVU67
 326              	.LBE6:
 327              	.LBB9:
 244:../../shields/Murata/src/alp.c ****     fifo_skip(fifo,1); //size
 328              		.loc 1 244 5 is_stmt 1 view .LVU68
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 17


 244:../../shields/Murata/src/alp.c ****     fifo_skip(fifo,1); //size
 329              		.loc 1 244 30 is_stmt 0 view .LVU69
 330 0136 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 331 0138 ADF80030 		strh	r3, [sp]	@ unaligned
 245:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.attempts, 1);
 332              		.loc 1 245 5 is_stmt 1 view .LVU70
 333 013c 0121     		movs	r1, #1
 334 013e 2046     		mov	r0, r4
 335 0140 FFF7FEFF 		bl	fifo_skip
 336              	.LVL34:
 246:../../shields/Murata/src/alp.c ****     fifo_pop(fifo, &interface_status.error_state, 1);
 337              		.loc 1 246 5 view .LVU71
 338 0144 0122     		movs	r2, #1
 339 0146 6946     		mov	r1, sp
 340 0148 2046     		mov	r0, r4
 341 014a FFF7FEFF 		bl	fifo_pop
 342              	.LVL35:
 247:../../shields/Murata/src/alp.c ****   }
 343              		.loc 1 247 5 view .LVU72
 344 014e 0122     		movs	r2, #1
 345 0150 0DEB0201 		add	r1, sp, r2
 346 0154 2046     		mov	r0, r4
 347 0156 FFF7FEFF 		bl	fifo_pop
 348              	.LVL36:
 349              	.LBE9:
 250:../../shields/Murata/src/alp.c **** }
 350              		.loc 1 250 36 view .LVU73
 351              		.loc 1 251 1 is_stmt 0 view .LVU74
 352 015a 68E7     		b	.L7
 353              	.L26:
 354              		.align	2
 355              	.L25:
 356 015c 00000000 		.word	.LC2
 357 0160 00000000 		.word	.LANCHOR1
 358 0164 40000000 		.word	.LC1
 359 0168 0C000000 		.word	.LC3
 360 016c 38000000 		.word	.LC4
 361 0170 00000000 		.word	.LANCHOR2
 362 0174 40000000 		.word	.LC5
 363 0178 60000000 		.word	.LC6
 364              		.cfi_endproc
 365              	.LFE15:
 367              		.section	.text.alp_get_operation,"ax",%progbits
 368              		.align	1
 369              		.global	alp_get_operation
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	alp_get_operation:
 376              	.LVL37:
 377              	.LFB1:
  42:../../shields/Murata/src/alp.c ****     alp_control_t alp_ctrl;
 378              		.loc 1 42 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 18


 382              		@ link register save eliminated.
  43:../../shields/Murata/src/alp.c ****     alp_ctrl.raw = (*alp_command);
 383              		.loc 1 43 5 view .LVU76
  44:../../shields/Murata/src/alp.c ****     return alp_ctrl.operation;
 384              		.loc 1 44 5 view .LVU77
  44:../../shields/Murata/src/alp.c ****     return alp_ctrl.operation;
 385              		.loc 1 44 21 is_stmt 0 view .LVU78
 386 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 387              	.LVL38:
  45:../../shields/Murata/src/alp.c **** }
 388              		.loc 1 45 5 is_stmt 1 view .LVU79
  46:../../shields/Murata/src/alp.c **** 
 389              		.loc 1 46 1 is_stmt 0 view .LVU80
 390 0002 00F03F00 		and	r0, r0, #63
 391 0006 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE1:
 395              		.section	.text.alp_parse_length_operand,"ax",%progbits
 396              		.align	1
 397              		.global	alp_parse_length_operand
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	alp_parse_length_operand:
 404              	.LVL39:
 405              	.LFB2:
  48:../../shields/Murata/src/alp.c ****   uint8_t len = 0;
 406              		.loc 1 48 53 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 0, uses_anonymous_args = 0
  48:../../shields/Murata/src/alp.c ****   uint8_t len = 0;
 410              		.loc 1 48 53 is_stmt 0 view .LVU82
 411 0000 10B5     		push	{r4, lr}
 412              	.LCFI5:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 14, -4
 416 0002 82B0     		sub	sp, sp, #8
 417              	.LCFI6:
 418              		.cfi_def_cfa_offset 16
 419 0004 0446     		mov	r4, r0
  49:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&len, 1);
 420              		.loc 1 49 3 is_stmt 1 view .LVU83
  49:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&len, 1);
 421              		.loc 1 49 11 is_stmt 0 view .LVU84
 422 0006 0023     		movs	r3, #0
 423 0008 8DF80730 		strb	r3, [sp, #7]
  50:../../shields/Murata/src/alp.c ****   uint8_t field_len = len >> 6;
 424              		.loc 1 50 3 is_stmt 1 view .LVU85
 425 000c 0122     		movs	r2, #1
 426 000e 0DF10701 		add	r1, sp, #7
 427 0012 FFF7FEFF 		bl	fifo_pop
 428              	.LVL40:
  51:../../shields/Murata/src/alp.c ****   if(field_len == 0)
 429              		.loc 1 51 3 view .LVU86
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 19


  51:../../shields/Murata/src/alp.c ****   if(field_len == 0)
 430              		.loc 1 51 11 is_stmt 0 view .LVU87
 431 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 432              	.LVL41:
  52:../../shields/Murata/src/alp.c ****     return (uint32_t)len;
 433              		.loc 1 52 3 is_stmt 1 view .LVU88
  52:../../shields/Murata/src/alp.c ****     return (uint32_t)len;
 434              		.loc 1 52 5 is_stmt 0 view .LVU89
 435 001a 8209     		lsrs	r2, r0, #6
 436 001c 01D1     		bne	.L32
 437              	.LVL42:
 438              	.L28:
  58:../../shields/Murata/src/alp.c **** 
 439              		.loc 1 58 1 view .LVU90
 440 001e 02B0     		add	sp, sp, #8
 441              	.LCFI7:
 442              		.cfi_remember_state
 443              		.cfi_def_cfa_offset 8
 444              		@ sp needed
 445 0020 10BD     		pop	{r4, pc}
 446              	.LVL43:
 447              	.L32:
 448              	.LCFI8:
 449              		.cfi_restore_state
  55:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 450              		.loc 1 55 3 is_stmt 1 view .LVU91
  55:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 451              		.loc 1 55 31 is_stmt 0 view .LVU92
 452 0022 00F03F00 		and	r0, r0, #63
 453              	.LVL44:
  55:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 454              		.loc 1 55 46 view .LVU93
 455 0026 D300     		lsls	r3, r2, #3
  55:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 456              		.loc 1 55 39 view .LVU94
 457 0028 9840     		lsls	r0, r0, r3
  55:../../shields/Murata/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 458              		.loc 1 55 12 view .LVU95
 459 002a 0090     		str	r0, [sp]
  56:../../shields/Murata/src/alp.c ****   return full_length;
 460              		.loc 1 56 3 is_stmt 1 view .LVU96
 461 002c 6946     		mov	r1, sp
 462 002e 2046     		mov	r0, r4
 463 0030 FFF7FEFF 		bl	fifo_pop
 464              	.LVL45:
  57:../../shields/Murata/src/alp.c **** }
 465              		.loc 1 57 3 view .LVU97
  57:../../shields/Murata/src/alp.c **** }
 466              		.loc 1 57 10 is_stmt 0 view .LVU98
 467 0034 0098     		ldr	r0, [sp]
 468 0036 F2E7     		b	.L28
 469              		.cfi_endproc
 470              	.LFE2:
 472              		.section	.text.alp_append_length_operand,"ax",%progbits
 473              		.align	1
 474              		.global	alp_append_length_operand
 475              		.syntax unified
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 20


 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv4-sp-d16
 480              	alp_append_length_operand:
 481              	.LVL46:
 482              	.LFB3:
  60:../../shields/Murata/src/alp.c ****   if(length < 64) {
 483              		.loc 1 60 63 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 16
 486              		@ frame_needed = 0, uses_anonymous_args = 0
  60:../../shields/Murata/src/alp.c ****   if(length < 64) {
 487              		.loc 1 60 63 is_stmt 0 view .LVU100
 488 0000 30B5     		push	{r4, r5, lr}
 489              	.LCFI9:
 490              		.cfi_def_cfa_offset 12
 491              		.cfi_offset 4, -12
 492              		.cfi_offset 5, -8
 493              		.cfi_offset 14, -4
 494 0002 85B0     		sub	sp, sp, #20
 495              	.LCFI10:
 496              		.cfi_def_cfa_offset 32
 497 0004 0546     		mov	r5, r0
 498 0006 0191     		str	r1, [sp, #4]
  61:../../shields/Murata/src/alp.c ****     // can be coded in one byte
 499              		.loc 1 61 3 is_stmt 1 view .LVU101
  61:../../shields/Murata/src/alp.c ****     // can be coded in one byte
 500              		.loc 1 61 5 is_stmt 0 view .LVU102
 501 0008 3F29     		cmp	r1, #63
 502 000a 26D9     		bls	.L44
  67:../../shields/Murata/src/alp.c ****   if(length > 0x3FFF)
 503              		.loc 1 67 3 is_stmt 1 view .LVU103
 504              	.LVL47:
  68:../../shields/Murata/src/alp.c ****     size = 2;
 505              		.loc 1 68 3 view .LVU104
  68:../../shields/Murata/src/alp.c ****     size = 2;
 506              		.loc 1 68 5 is_stmt 0 view .LVU105
 507 000c B1F5804F 		cmp	r1, #16384
 508 0010 2FD2     		bcs	.L41
  67:../../shields/Murata/src/alp.c ****   if(length > 0x3FFF)
 509              		.loc 1 67 11 view .LVU106
 510 0012 0124     		movs	r4, #1
 511              	.L37:
 512              	.LVL48:
  70:../../shields/Murata/src/alp.c ****     size = 3;
 513              		.loc 1 70 3 is_stmt 1 view .LVU107
  70:../../shields/Murata/src/alp.c ****     size = 3;
 514              		.loc 1 70 5 is_stmt 0 view .LVU108
 515 0014 B1F5800F 		cmp	r1, #4194304
 516 0018 00D3     		bcc	.L38
  71:../../shields/Murata/src/alp.c **** 
 517              		.loc 1 71 10 view .LVU109
 518 001a 0324     		movs	r4, #3
 519              	.LVL49:
 520              	.L38:
  73:../../shields/Murata/src/alp.c ****   byte += (size << 6); // length specifier bits
 521              		.loc 1 73 3 is_stmt 1 view .LVU110
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 21


  74:../../shields/Murata/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
 522              		.loc 1 74 3 view .LVU111
  74:../../shields/Murata/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
 523              		.loc 1 74 17 is_stmt 0 view .LVU112
 524 001c A301     		lsls	r3, r4, #6
 525 001e DBB2     		uxtb	r3, r3
  74:../../shields/Murata/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
 526              		.loc 1 74 8 view .LVU113
 527 0020 8DF80F30 		strb	r3, [sp, #15]
  75:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
 528              		.loc 1 75 3 is_stmt 1 view .LVU114
  75:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
 529              		.loc 1 75 32 is_stmt 0 view .LVU115
 530 0024 04AA     		add	r2, sp, #16
 531 0026 2244     		add	r2, r2, r4
 532 0028 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
  75:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
 533              		.loc 1 75 8 view .LVU116
 534 002c 1344     		add	r3, r3, r2
 535 002e 8DF80F30 		strb	r3, [sp, #15]
  76:../../shields/Murata/src/alp.c ****   do {
 536              		.loc 1 76 3 is_stmt 1 view .LVU117
 537 0032 0122     		movs	r2, #1
 538 0034 0DF10F01 		add	r1, sp, #15
 539              	.LVL50:
  76:../../shields/Murata/src/alp.c ****   do {
 540              		.loc 1 76 3 is_stmt 0 view .LVU118
 541 0038 2846     		mov	r0, r5
 542              	.LVL51:
  76:../../shields/Murata/src/alp.c ****   do {
 543              		.loc 1 76 3 view .LVU119
 544 003a FFF7FEFF 		bl	fifo_put
 545              	.LVL52:
  76:../../shields/Murata/src/alp.c ****   do {
 546              		.loc 1 76 3 view .LVU120
 547 003e D0B9     		cbnz	r0, .L45
 548              	.L39:
  77:../../shields/Murata/src/alp.c ****     size--;
 549              		.loc 1 77 3 is_stmt 1 view .LVU121
  78:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
 550              		.loc 1 78 5 view .LVU122
  78:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
 551              		.loc 1 78 9 is_stmt 0 view .LVU123
 552 0040 013C     		subs	r4, r4, #1
 553              	.LVL53:
  78:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
 554              		.loc 1 78 9 view .LVU124
 555 0042 E4B2     		uxtb	r4, r4
 556              	.LVL54:
  79:../../shields/Murata/src/alp.c ****   } while(size > 0);
 557              		.loc 1 79 5 is_stmt 1 view .LVU125
 558 0044 0122     		movs	r2, #1
 559 0046 01AB     		add	r3, sp, #4
 560 0048 1919     		adds	r1, r3, r4
 561 004a 2846     		mov	r0, r5
 562 004c FFF7FEFF 		bl	fifo_put
 563              	.LVL55:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 22


 564 0050 B8B9     		cbnz	r0, .L46
  80:../../shields/Murata/src/alp.c **** }
 565              		.loc 1 80 3 is_stmt 0 view .LVU126
 566 0052 002C     		cmp	r4, #0
 567 0054 F4D1     		bne	.L39
 568              	.LVL56:
 569              	.L33:
  81:../../shields/Murata/src/alp.c **** 
 570              		.loc 1 81 1 view .LVU127
 571 0056 05B0     		add	sp, sp, #20
 572              	.LCFI11:
 573              		.cfi_remember_state
 574              		.cfi_def_cfa_offset 12
 575              		@ sp needed
 576 0058 30BD     		pop	{r4, r5, pc}
 577              	.LVL57:
 578              	.L44:
 579              	.LCFI12:
 580              		.cfi_restore_state
  63:../../shields/Murata/src/alp.c ****     return;
 581              		.loc 1 63 5 is_stmt 1 view .LVU128
 582 005a 0122     		movs	r2, #1
 583 005c 01A9     		add	r1, sp, #4
 584              	.LVL58:
  63:../../shields/Murata/src/alp.c ****     return;
 585              		.loc 1 63 5 is_stmt 0 view .LVU129
 586 005e FFF7FEFF 		bl	fifo_put
 587              	.LVL59:
  63:../../shields/Murata/src/alp.c ****     return;
 588              		.loc 1 63 5 view .LVU130
 589 0062 0028     		cmp	r0, #0
 590 0064 F7D0     		beq	.L33
  63:../../shields/Murata/src/alp.c ****     return;
 591              		.loc 1 63 5 discriminator 1 view .LVU131
 592 0066 0A4B     		ldr	r3, .L47
 593 0068 0A4A     		ldr	r2, .L47+4
 594 006a 3F21     		movs	r1, #63
 595 006c 0A48     		ldr	r0, .L47+8
 596 006e FFF7FEFF 		bl	__assert_func
 597              	.LVL60:
 598              	.L41:
  69:../../shields/Murata/src/alp.c ****   if(length > 0x3FFFFF)
 599              		.loc 1 69 10 view .LVU132
 600 0072 0224     		movs	r4, #2
 601 0074 CEE7     		b	.L37
 602              	.LVL61:
 603              	.L45:
  76:../../shields/Murata/src/alp.c ****   do {
 604              		.loc 1 76 3 discriminator 1 view .LVU133
 605 0076 094B     		ldr	r3, .L47+12
 606 0078 064A     		ldr	r2, .L47+4
 607 007a 4C21     		movs	r1, #76
 608 007c 0648     		ldr	r0, .L47+8
 609 007e FFF7FEFF 		bl	__assert_func
 610              	.LVL62:
 611              	.L46:
  79:../../shields/Murata/src/alp.c ****   } while(size > 0);
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 23


 612              		.loc 1 79 5 discriminator 1 view .LVU134
 613 0082 074B     		ldr	r3, .L47+16
 614 0084 034A     		ldr	r2, .L47+4
 615 0086 4F21     		movs	r1, #79
 616 0088 0348     		ldr	r0, .L47+8
 617 008a FFF7FEFF 		bl	__assert_func
 618              	.LVL63:
 619              	.L48:
 620 008e 00BF     		.align	2
 621              	.L47:
 622 0090 00000000 		.word	.LC7
 623 0094 00000000 		.word	.LANCHOR3
 624 0098 40000000 		.word	.LC1
 625 009c 34000000 		.word	.LC8
 626 00a0 5C000000 		.word	.LC9
 627              		.cfi_endproc
 628              	.LFE3:
 630              		.section	.text.alp_parse_file_offset_operand,"ax",%progbits
 631              		.align	1
 632              		.global	alp_parse_file_offset_operand
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	alp_parse_file_offset_operand:
 639              	.LVL64:
 640              	.LFB4:
  83:../../shields/Murata/src/alp.c ****   alp_operand_file_offset_t operand;
 641              		.loc 1 83 75 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 8
 644              		@ frame_needed = 0, uses_anonymous_args = 0
  83:../../shields/Murata/src/alp.c ****   alp_operand_file_offset_t operand;
 645              		.loc 1 83 75 is_stmt 0 view .LVU136
 646 0000 30B5     		push	{r4, r5, lr}
 647              	.LCFI13:
 648              		.cfi_def_cfa_offset 12
 649              		.cfi_offset 4, -12
 650              		.cfi_offset 5, -8
 651              		.cfi_offset 14, -4
 652 0002 83B0     		sub	sp, sp, #12
 653              	.LCFI14:
 654              		.cfi_def_cfa_offset 24
 655 0004 0446     		mov	r4, r0
 656 0006 0D46     		mov	r5, r1
  84:../../shields/Murata/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
 657              		.loc 1 84 3 is_stmt 1 view .LVU137
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 658              		.loc 1 85 3 view .LVU138
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 659              		.loc 1 85 17 is_stmt 0 view .LVU139
 660 0008 0122     		movs	r2, #1
 661 000a 6946     		mov	r1, sp
 662              	.LVL65:
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 663              		.loc 1 85 17 view .LVU140
 664 000c 2846     		mov	r0, r5
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 24


 665              	.LVL66:
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 666              		.loc 1 85 17 view .LVU141
 667 000e FFF7FEFF 		bl	fifo_pop
 668              	.LVL67:
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 669              		.loc 1 85 58 is_stmt 1 view .LVU142
 670 0012 58B9     		cbnz	r0, .L52
  86:../../shields/Murata/src/alp.c ****   return operand;
 671              		.loc 1 86 3 view .LVU143
  86:../../shields/Murata/src/alp.c ****   return operand;
 672              		.loc 1 86 20 is_stmt 0 view .LVU144
 673 0014 2846     		mov	r0, r5
 674              	.LVL68:
  86:../../shields/Murata/src/alp.c ****   return operand;
 675              		.loc 1 86 20 view .LVU145
 676 0016 FFF7FEFF 		bl	alp_parse_length_operand
 677              	.LVL69:
  86:../../shields/Murata/src/alp.c ****   return operand;
 678              		.loc 1 86 18 view .LVU146
 679 001a 0190     		str	r0, [sp, #4]
  87:../../shields/Murata/src/alp.c **** }
 680              		.loc 1 87 3 is_stmt 1 view .LVU147
  87:../../shields/Murata/src/alp.c **** }
 681              		.loc 1 87 10 is_stmt 0 view .LVU148
 682 001c 02AB     		add	r3, sp, #8
 683 001e 13E90300 		ldmdb	r3, {r0, r1}
 684 0022 84E80300 		stm	r4, {r0, r1}
  88:../../shields/Murata/src/alp.c **** 
 685              		.loc 1 88 1 view .LVU149
 686 0026 2046     		mov	r0, r4
 687 0028 03B0     		add	sp, sp, #12
 688              	.LCFI15:
 689              		.cfi_remember_state
 690              		.cfi_def_cfa_offset 12
 691              		@ sp needed
 692 002a 30BD     		pop	{r4, r5, pc}
 693              	.LVL70:
 694              	.L52:
 695              	.LCFI16:
 696              		.cfi_restore_state
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 697              		.loc 1 85 58 discriminator 1 view .LVU150
 698 002c 024B     		ldr	r3, .L53
 699 002e 034A     		ldr	r2, .L53+4
 700 0030 5521     		movs	r1, #85
 701 0032 0348     		ldr	r0, .L53+8
 702              	.LVL71:
  85:../../shields/Murata/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 703              		.loc 1 85 58 discriminator 1 view .LVU151
 704 0034 FFF7FEFF 		bl	__assert_func
 705              	.LVL72:
 706              	.L54:
 707              		.align	2
 708              	.L53:
 709 0038 00000000 		.word	.LC10
 710 003c 00000000 		.word	.LANCHOR4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 25


 711 0040 40000000 		.word	.LC1
 712              		.cfi_endproc
 713              	.LFE4:
 715              		.section	.text.parse_operand_file_data,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv4-sp-d16
 722              	parse_operand_file_data:
 723              	.LVL73:
 724              	.LFB11:
 191:../../shields/Murata/src/alp.c ****   action->file_data_operand.file_offset = alp_parse_file_offset_operand(fifo);
 725              		.loc 1 191 73 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 191:../../shields/Murata/src/alp.c ****   action->file_data_operand.file_offset = alp_parse_file_offset_operand(fifo);
 729              		.loc 1 191 73 is_stmt 0 view .LVU153
 730 0000 70B5     		push	{r4, r5, r6, lr}
 731              	.LCFI17:
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 4, -16
 734              		.cfi_offset 5, -12
 735              		.cfi_offset 6, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              	.LCFI18:
 739              		.cfi_def_cfa_offset 24
 740 0004 0546     		mov	r5, r0
 741 0006 0E46     		mov	r6, r1
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 742              		.loc 1 192 3 is_stmt 1 view .LVU154
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 743              		.loc 1 192 43 is_stmt 0 view .LVU155
 744 0008 6C46     		mov	r4, sp
 745 000a 0146     		mov	r1, r0
 746              	.LVL74:
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 747              		.loc 1 192 43 view .LVU156
 748 000c 2046     		mov	r0, r4
 749              	.LVL75:
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 750              		.loc 1 192 43 view .LVU157
 751 000e FFF7FEFF 		bl	alp_parse_file_offset_operand
 752              	.LVL76:
 192:../../shields/Murata/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 753              		.loc 1 192 43 view .LVU158
 754 0012 331D     		adds	r3, r6, #4
 755 0014 94E80300 		ldm	r4, {r0, r1}
 756 0018 83E80300 		stm	r3, {r0, r1}
 193:../../shields/Murata/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 757              		.loc 1 193 3 is_stmt 1 view .LVU159
 193:../../shields/Murata/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 758              		.loc 1 193 52 is_stmt 0 view .LVU160
 759 001c 2846     		mov	r0, r5
 760 001e FFF7FEFF 		bl	alp_parse_length_operand
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 26


 761              	.LVL77:
 193:../../shields/Murata/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 762              		.loc 1 193 50 view .LVU161
 763 0022 F060     		str	r0, [r6, #12]
 194:../../shields/Murata/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 764              		.loc 1 194 3 is_stmt 1 view .LVU162
 765 0024 FF28     		cmp	r0, #255
 766 0026 07D8     		bhi	.L58
 195:../../shields/Murata/src/alp.c **** }
 767              		.loc 1 195 3 view .LVU163
 768 0028 82B2     		uxth	r2, r0
 769 002a 06F11001 		add	r1, r6, #16
 770 002e 2846     		mov	r0, r5
 771 0030 FFF7FEFF 		bl	fifo_pop
 772              	.LVL78:
 196:../../shields/Murata/src/alp.c **** 
 773              		.loc 1 196 1 is_stmt 0 view .LVU164
 774 0034 02B0     		add	sp, sp, #8
 775              	.LCFI19:
 776              		.cfi_remember_state
 777              		.cfi_def_cfa_offset 16
 778              		@ sp needed
 779 0036 70BD     		pop	{r4, r5, r6, pc}
 780              	.LVL79:
 781              	.L58:
 782              	.LCFI20:
 783              		.cfi_restore_state
 194:../../shields/Murata/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 784              		.loc 1 194 3 discriminator 1 view .LVU165
 785 0038 024B     		ldr	r3, .L59
 786 003a 034A     		ldr	r2, .L59+4
 787 003c C221     		movs	r1, #194
 788 003e 0348     		ldr	r0, .L59+8
 789 0040 FFF7FEFF 		bl	__assert_func
 790              	.LVL80:
 791              	.L60:
 792              		.align	2
 793              	.L59:
 794 0044 00000000 		.word	.LC11
 795 0048 00000000 		.word	.LANCHOR5
 796 004c 40000000 		.word	.LC1
 797              		.cfi_endproc
 798              	.LFE11:
 800              		.section	.text.parse_op_write_file_data,"ax",%progbits
 801              		.align	1
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv4-sp-d16
 807              	parse_op_write_file_data:
 808              	.LVL81:
 809              	.LFB12:
 198:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 810              		.loc 1 198 74 is_stmt 1 view -0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 27


 198:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 814              		.loc 1 198 74 is_stmt 0 view .LVU167
 815 0000 08B5     		push	{r3, lr}
 816              	.LCFI21:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 199:../../shields/Murata/src/alp.c ****   DPRINT("parsed write file data file %i, len %i", action->file_data_operand.file_offset.file_id, a
 820              		.loc 1 199 3 is_stmt 1 view .LVU168
 821 0002 FFF7FEFF 		bl	parse_operand_file_data
 822              	.LVL82:
 200:../../shields/Murata/src/alp.c **** }
 823              		.loc 1 200 146 view .LVU169
 201:../../shields/Murata/src/alp.c **** 
 824              		.loc 1 201 1 is_stmt 0 view .LVU170
 825 0006 08BD     		pop	{r3, pc}
 826              		.cfi_endproc
 827              	.LFE12:
 829              		.section	.text.parse_op_return_file_data,"ax",%progbits
 830              		.align	1
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv4-sp-d16
 836              	parse_op_return_file_data:
 837              	.LVL83:
 838              	.LFB13:
 204:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 839              		.loc 1 204 75 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 204:../../shields/Murata/src/alp.c ****   parse_operand_file_data(fifo, action);
 843              		.loc 1 204 75 is_stmt 0 view .LVU172
 844 0000 08B5     		push	{r3, lr}
 845              	.LCFI22:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
 205:../../shields/Murata/src/alp.c ****   DPRINT("parsed return file data file %i, len %i", action->file_data_operand.file_offset.file_id, 
 849              		.loc 1 205 3 is_stmt 1 view .LVU173
 850 0002 FFF7FEFF 		bl	parse_operand_file_data
 851              	.LVL84:
 206:../../shields/Murata/src/alp.c **** }
 852              		.loc 1 206 147 view .LVU174
 207:../../shields/Murata/src/alp.c **** 
 853              		.loc 1 207 1 is_stmt 0 view .LVU175
 854 0006 08BD     		pop	{r3, pc}
 855              		.cfi_endproc
 856              	.LFE13:
 858              		.section	.text.alp_parse_file_header_operand,"ax",%progbits
 859              		.align	1
 860              		.global	alp_parse_file_header_operand
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 28


 866              	alp_parse_file_header_operand:
 867              	.LVL85:
 868              	.LFB5:
  90:../../shields/Murata/src/alp.c ****   alp_operand_file_header_t operand;
 869              		.loc 1 90 75 is_stmt 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 16
 872              		@ frame_needed = 0, uses_anonymous_args = 0
  90:../../shields/Murata/src/alp.c ****   alp_operand_file_header_t operand;
 873              		.loc 1 90 75 is_stmt 0 view .LVU177
 874 0000 30B5     		push	{r4, r5, lr}
 875              	.LCFI23:
 876              		.cfi_def_cfa_offset 12
 877              		.cfi_offset 4, -12
 878              		.cfi_offset 5, -8
 879              		.cfi_offset 14, -4
 880 0002 85B0     		sub	sp, sp, #20
 881              	.LCFI24:
 882              		.cfi_def_cfa_offset 32
 883 0004 0446     		mov	r4, r0
 884 0006 0D46     		mov	r5, r1
  91:../../shields/Murata/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
 885              		.loc 1 91 3 is_stmt 1 view .LVU178
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 886              		.loc 1 92 3 view .LVU179
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 887              		.loc 1 92 17 is_stmt 0 view .LVU180
 888 0008 0122     		movs	r2, #1
 889 000a 6946     		mov	r1, sp
 890              	.LVL86:
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 891              		.loc 1 92 17 view .LVU181
 892 000c 2846     		mov	r0, r5
 893              	.LVL87:
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 894              		.loc 1 92 17 view .LVU182
 895 000e FFF7FEFF 		bl	fifo_pop
 896              	.LVL88:
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 897              		.loc 1 92 58 is_stmt 1 view .LVU183
 898 0012 D0B9     		cbnz	r0, .L69
  93:../../shields/Murata/src/alp.c **** 
 899              		.loc 1 93 3 view .LVU184
  93:../../shields/Murata/src/alp.c **** 
 900              		.loc 1 93 9 is_stmt 0 view .LVU185
 901 0014 0C22     		movs	r2, #12
 902 0016 0DF10101 		add	r1, sp, #1
 903 001a 2846     		mov	r0, r5
 904              	.LVL89:
  93:../../shields/Murata/src/alp.c **** 
 905              		.loc 1 93 9 view .LVU186
 906 001c FFF7FEFF 		bl	fifo_pop
 907              	.LVL90:
  93:../../shields/Murata/src/alp.c **** 
 908              		.loc 1 93 87 is_stmt 1 view .LVU187
 909 0020 C8B9     		cbnz	r0, .L70
  96:../../shields/Murata/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 29


 910              		.loc 1 96 3 view .LVU188
  96:../../shields/Murata/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
 911              		.loc 1 96 32 is_stmt 0 view .LVU189
 912 0022 DDF80530 		ldr	r3, [sp, #5]	@ unaligned
 913 0026 1BBA     		rev	r3, r3
  96:../../shields/Murata/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
 914              		.loc 1 96 30 view .LVU190
 915 0028 CDF80530 		str	r3, [sp, #5]	@ unaligned
  97:../../shields/Murata/src/alp.c ****   return operand;
 916              		.loc 1 97 3 is_stmt 1 view .LVU191
  97:../../shields/Murata/src/alp.c ****   return operand;
 917              		.loc 1 97 42 is_stmt 0 view .LVU192
 918 002c DDF80930 		ldr	r3, [sp, #9]	@ unaligned
 919 0030 1BBA     		rev	r3, r3
  97:../../shields/Murata/src/alp.c ****   return operand;
 920              		.loc 1 97 40 view .LVU193
 921 0032 CDF80930 		str	r3, [sp, #9]	@ unaligned
  98:../../shields/Murata/src/alp.c **** }
 922              		.loc 1 98 3 is_stmt 1 view .LVU194
  98:../../shields/Murata/src/alp.c **** }
 923              		.loc 1 98 10 is_stmt 0 view .LVU195
 924 0036 6B46     		mov	r3, sp
 925 0038 07CB     		ldmia	r3!, {r0, r1, r2}
 926              	.LVL91:
  98:../../shields/Murata/src/alp.c **** }
 927              		.loc 1 98 10 view .LVU196
 928 003a 2060     		str	r0, [r4]	@ unaligned
 929 003c 6160     		str	r1, [r4, #4]	@ unaligned
 930 003e A260     		str	r2, [r4, #8]	@ unaligned
 931 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 0042 2373     		strb	r3, [r4, #12]
  99:../../shields/Murata/src/alp.c **** 
 933              		.loc 1 99 1 view .LVU197
 934 0044 2046     		mov	r0, r4
 935 0046 05B0     		add	sp, sp, #20
 936              	.LCFI25:
 937              		.cfi_remember_state
 938              		.cfi_def_cfa_offset 12
 939              		@ sp needed
 940 0048 30BD     		pop	{r4, r5, pc}
 941              	.LVL92:
 942              	.L69:
 943              	.LCFI26:
 944              		.cfi_restore_state
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 945              		.loc 1 92 58 discriminator 1 view .LVU198
 946 004a 064B     		ldr	r3, .L71
 947 004c 064A     		ldr	r2, .L71+4
 948 004e 5C21     		movs	r1, #92
 949 0050 0648     		ldr	r0, .L71+8
 950              	.LVL93:
  92:../../shields/Murata/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(fs_file_header_t)); assert(err ==
 951              		.loc 1 92 58 discriminator 1 view .LVU199
 952 0052 FFF7FEFF 		bl	__assert_func
 953              	.LVL94:
 954              	.L70:
  93:../../shields/Murata/src/alp.c **** 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 30


 955              		.loc 1 93 87 discriminator 1 view .LVU200
 956 0056 034B     		ldr	r3, .L71
 957 0058 034A     		ldr	r2, .L71+4
 958 005a 5D21     		movs	r1, #93
 959 005c 0348     		ldr	r0, .L71+8
 960              	.LVL95:
  93:../../shields/Murata/src/alp.c **** 
 961              		.loc 1 93 87 discriminator 1 view .LVU201
 962 005e FFF7FEFF 		bl	__assert_func
 963              	.LVL96:
 964              	.L72:
 965 0062 00BF     		.align	2
 966              	.L71:
 967 0064 00000000 		.word	.LC10
 968 0068 00000000 		.word	.LANCHOR6
 969 006c 40000000 		.word	.LC1
 970              		.cfi_endproc
 971              	.LFE5:
 973              		.section	.text.alp_append_file_offset_operand,"ax",%progbits
 974              		.align	1
 975              		.global	alp_append_file_offset_operand
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	alp_append_file_offset_operand:
 982              	.LVL97:
 983              	.LFB6:
 101:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 984              		.loc 1 101 85 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 101:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 988              		.loc 1 101 85 is_stmt 0 view .LVU203
 989 0000 38B5     		push	{r3, r4, r5, lr}
 990              	.LCFI27:
 991              		.cfi_def_cfa_offset 16
 992              		.cfi_offset 3, -16
 993              		.cfi_offset 4, -12
 994              		.cfi_offset 5, -8
 995              		.cfi_offset 14, -4
 996 0002 0446     		mov	r4, r0
 997 0004 1546     		mov	r5, r2
 102:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 998              		.loc 1 102 3 is_stmt 1 view .LVU204
 999 0006 FFF7FEFF 		bl	fifo_put_byte
 1000              	.LVL98:
 102:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1001              		.loc 1 102 3 is_stmt 0 view .LVU205
 1002 000a 20B9     		cbnz	r0, .L76
 103:../../shields/Murata/src/alp.c **** }
 1003              		.loc 1 103 3 is_stmt 1 view .LVU206
 1004 000c 2946     		mov	r1, r5
 1005 000e 2046     		mov	r0, r4
 1006 0010 FFF7FEFF 		bl	alp_append_length_operand
 1007              	.LVL99:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 31


 104:../../shields/Murata/src/alp.c **** 
 1008              		.loc 1 104 1 is_stmt 0 view .LVU207
 1009 0014 38BD     		pop	{r3, r4, r5, pc}
 1010              	.LVL100:
 1011              	.L76:
 102:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1012              		.loc 1 102 3 discriminator 1 view .LVU208
 1013 0016 034B     		ldr	r3, .L77
 1014 0018 034A     		ldr	r2, .L77+4
 1015 001a 6621     		movs	r1, #102
 1016 001c 0348     		ldr	r0, .L77+8
 1017 001e FFF7FEFF 		bl	__assert_func
 1018              	.LVL101:
 1019              	.L78:
 1020 0022 00BF     		.align	2
 1021              	.L77:
 1022 0024 00000000 		.word	.LC12
 1023 0028 00000000 		.word	.LANCHOR7
 1024 002c 40000000 		.word	.LC1
 1025              		.cfi_endproc
 1026              	.LFE6:
 1028              		.section	.text.alp_append_forward_action,"ax",%progbits
 1029              		.align	1
 1030              		.global	alp_append_forward_action
 1031              		.syntax unified
 1032              		.thumb
 1033              		.thumb_func
 1034              		.fpu fpv4-sp-d16
 1036              	alp_append_forward_action:
 1037              	.LVL102:
 1038              	.LFB7:
 106:../../shields/Murata/src/alp.c ****   assert(config!=NULL);
 1039              		.loc 1 106 99 is_stmt 1 view -0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 106:../../shields/Murata/src/alp.c ****   assert(config!=NULL);
 1043              		.loc 1 106 99 is_stmt 0 view .LVU210
 1044 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1045              	.LCFI28:
 1046              		.cfi_def_cfa_offset 20
 1047              		.cfi_offset 4, -20
 1048              		.cfi_offset 5, -16
 1049              		.cfi_offset 6, -12
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 83B0     		sub	sp, sp, #12
 1053              	.LCFI29:
 1054              		.cfi_def_cfa_offset 32
 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1055              		.loc 1 107 3 is_stmt 1 view .LVU211
 1056 0004 EAB1     		cbz	r2, .L109
 1057 0006 0446     		mov	r4, r0
 1058 0008 0E46     		mov	r6, r1
 1059 000a 1F46     		mov	r7, r3
 1060 000c 1546     		mov	r5, r2
 108:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 32


 1061              		.loc 1 108 3 view .LVU212
 1062 000e 3221     		movs	r1, #50
 1063              	.LVL103:
 108:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 1064              		.loc 1 108 3 is_stmt 0 view .LVU213
 1065 0010 FFF7FEFF 		bl	fifo_put_byte
 1066              	.LVL104:
 108:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 1067              		.loc 1 108 3 view .LVU214
 1068 0014 D8B9     		cbnz	r0, .L110
 109:../../shields/Murata/src/alp.c **** 
 1069              		.loc 1 109 3 is_stmt 1 view .LVU215
 1070 0016 3146     		mov	r1, r6
 1071 0018 2046     		mov	r0, r4
 1072 001a FFF7FEFF 		bl	fifo_put_byte
 1073              	.LVL105:
 1074 001e E0B9     		cbnz	r0, .L111
 111:../../shields/Murata/src/alp.c ****   {
 1075              		.loc 1 111 3 view .LVU216
 111:../../shields/Murata/src/alp.c ****   {
 1076              		.loc 1 111 6 is_stmt 0 view .LVU217
 1077 0020 D72E     		cmp	r6, #215
 1078 0022 20D0     		beq	.L112
 120:../../shields/Murata/src/alp.c ****   {
 1079              		.loc 1 120 8 is_stmt 1 view .LVU218
 120:../../shields/Murata/src/alp.c ****   {
 1080              		.loc 1 120 10 is_stmt 0 view .LVU219
 1081 0024 022E     		cmp	r6, #2
 1082 0026 6ED0     		beq	.L113
 133:../../shields/Murata/src/alp.c ****   {
 1083              		.loc 1 133 8 is_stmt 1 view .LVU220
 133:../../shields/Murata/src/alp.c ****   {
 1084              		.loc 1 133 10 is_stmt 0 view .LVU221
 1085 0028 032E     		cmp	r6, #3
 1086 002a 00F0C080 		beq	.L114
 144:../../shields/Murata/src/alp.c ****   }
 1087              		.loc 1 144 5 is_stmt 1 view .LVU222
 1088 002e 3A46     		mov	r2, r7
 1089 0030 2946     		mov	r1, r5
 1090 0032 2046     		mov	r0, r4
 1091 0034 FFF7FEFF 		bl	fifo_put
 1092              	.LVL106:
 1093 0038 0028     		cmp	r0, #0
 1094 003a 40F0F980 		bne	.L115
 1095              	.L79:
 148:../../shields/Murata/src/alp.c **** 
 1096              		.loc 1 148 1 is_stmt 0 view .LVU223
 1097 003e 03B0     		add	sp, sp, #12
 1098              	.LCFI30:
 1099              		.cfi_remember_state
 1100              		.cfi_def_cfa_offset 20
 1101              		@ sp needed
 1102 0040 F0BD     		pop	{r4, r5, r6, r7, pc}
 1103              	.LVL107:
 1104              	.L109:
 1105              	.LCFI31:
 1106              		.cfi_restore_state
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 33


 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1107              		.loc 1 107 3 discriminator 1 view .LVU224
 1108 0042 7E4B     		ldr	r3, .L129
 1109              	.LVL108:
 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1110              		.loc 1 107 3 discriminator 1 view .LVU225
 1111 0044 7E4A     		ldr	r2, .L129+4
 1112              	.LVL109:
 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1113              		.loc 1 107 3 discriminator 1 view .LVU226
 1114 0046 6B21     		movs	r1, #107
 1115              	.LVL110:
 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1116              		.loc 1 107 3 discriminator 1 view .LVU227
 1117 0048 7E48     		ldr	r0, .L129+8
 1118              	.LVL111:
 107:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1119              		.loc 1 107 3 discriminator 1 view .LVU228
 1120 004a FFF7FEFF 		bl	__assert_func
 1121              	.LVL112:
 1122              	.L110:
 108:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 1123              		.loc 1 108 3 discriminator 1 view .LVU229
 1124 004e 7E4B     		ldr	r3, .L129+12
 1125 0050 7B4A     		ldr	r2, .L129+4
 1126 0052 6C21     		movs	r1, #108
 1127 0054 7B48     		ldr	r0, .L129+8
 1128 0056 FFF7FEFF 		bl	__assert_func
 1129              	.LVL113:
 1130              	.L111:
 109:../../shields/Murata/src/alp.c **** 
 1131              		.loc 1 109 3 discriminator 1 view .LVU230
 1132 005a 7C4B     		ldr	r3, .L129+16
 1133 005c 784A     		ldr	r2, .L129+4
 1134 005e 6D21     		movs	r1, #109
 1135 0060 7848     		ldr	r0, .L129+8
 1136 0062 FFF7FEFF 		bl	__assert_func
 1137              	.LVL114:
 1138              	.L112:
 1139              	.LBB15:
 113:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 1140              		.loc 1 113 5 is_stmt 1 view .LVU231
 1141 0066 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1142 0068 2046     		mov	r0, r4
 1143 006a FFF7FEFF 		bl	fifo_put_byte
 1144              	.LVL115:
 1145 006e 90B9     		cbnz	r0, .L116
 114:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 1146              		.loc 1 114 5 view .LVU232
 1147 0070 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 1148 0072 2046     		mov	r0, r4
 1149 0074 FFF7FEFF 		bl	fifo_put_byte
 1150              	.LVL116:
 1151 0078 98B9     		cbnz	r0, .L117
 115:../../shields/Murata/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 1152              		.loc 1 115 5 view .LVU233
 1153 007a A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 34


 1154 007c 2046     		mov	r0, r4
 1155 007e FFF7FEFF 		bl	fifo_put_byte
 1156              	.LVL117:
 1157 0082 A0B9     		cbnz	r0, .L118
 116:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.access_class) == oss7SUC
 1158              		.loc 1 116 5 view .LVU234
 116:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.access_class) == oss7SUC
 1159              		.loc 1 116 98 is_stmt 0 view .LVU235
 1160 0084 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1161 0086 C3F30113 		ubfx	r3, r3, #4, #2
 1162              	.LVL118:
 1163              	.LBB16:
 1164              	.LBI16:
 290:../../shields/Murata/inc/d7ap.h ****   switch(id_type)
 1165              		.loc 2 290 23 is_stmt 1 view .LVU236
 1166              	.LBB17:
 291:../../shields/Murata/inc/d7ap.h ****   {
 1167              		.loc 2 291 3 view .LVU237
 1168 008a 032B     		cmp	r3, #3
 1169 008c 19D8     		bhi	.L87
 1170 008e DFE803F0 		tbb	[pc, r3]
 1171              	.L89:
 1172 0092 21       		.byte	(.L107-.L89)/2
 1173 0093 1F       		.byte	(.L91-.L89)/2
 1174 0094 14       		.byte	(.L90-.L89)/2
 1175 0095 16       		.byte	(.L88-.L89)/2
 1176              	.LVL119:
 1177              		.p2align 1
 1178              	.L116:
 291:../../shields/Murata/inc/d7ap.h ****   {
 1179              		.loc 2 291 3 is_stmt 0 view .LVU238
 1180              	.LBE17:
 1181              	.LBE16:
 113:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 1182              		.loc 1 113 5 discriminator 1 view .LVU239
 1183 0096 6E4B     		ldr	r3, .L129+20
 1184 0098 694A     		ldr	r2, .L129+4
 1185 009a 7121     		movs	r1, #113
 1186 009c 6948     		ldr	r0, .L129+8
 1187 009e FFF7FEFF 		bl	__assert_func
 1188              	.LVL120:
 1189              	.L117:
 114:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 1190              		.loc 1 114 5 discriminator 1 view .LVU240
 1191 00a2 6C4B     		ldr	r3, .L129+24
 1192 00a4 664A     		ldr	r2, .L129+4
 1193 00a6 7221     		movs	r1, #114
 1194 00a8 6648     		ldr	r0, .L129+8
 1195 00aa FFF7FEFF 		bl	__assert_func
 1196              	.LVL121:
 1197              	.L118:
 115:../../shields/Murata/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 1198              		.loc 1 115 5 discriminator 1 view .LVU241
 1199 00ae 6A4B     		ldr	r3, .L129+28
 1200 00b0 634A     		ldr	r2, .L129+4
 1201 00b2 7321     		movs	r1, #115
 1202 00b4 6348     		ldr	r0, .L129+8
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 35


 1203 00b6 FFF7FEFF 		bl	__assert_func
 1204              	.LVL122:
 1205              	.L90:
 1206              	.LBB19:
 1207              	.LBB18:
 298:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 1208              		.loc 2 298 9 is_stmt 1 view .LVU242
 298:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 1209              		.loc 2 298 16 is_stmt 0 view .LVU243
 1210 00ba 0826     		movs	r6, #8
 1211 00bc 0BE0     		b	.L92
 1212              	.L88:
 300:../../shields/Murata/inc/d7ap.h ****       default:
 1213              		.loc 2 300 9 is_stmt 1 view .LVU244
 300:../../shields/Murata/inc/d7ap.h ****       default:
 1214              		.loc 2 300 16 is_stmt 0 view .LVU245
 1215 00be 0226     		movs	r6, #2
 1216 00c0 09E0     		b	.L92
 1217              	.L87:
 1218              		.loc 2 302 9 is_stmt 1 view .LVU246
 1219 00c2 664B     		ldr	r3, .L129+32
 1220 00c4 664A     		ldr	r2, .L129+36
 1221 00c6 4FF49771 		mov	r1, #302
 1222 00ca 6648     		ldr	r0, .L129+40
 1223 00cc FFF7FEFF 		bl	__assert_func
 1224              	.LVL123:
 1225              	.L91:
 294:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 1226              		.loc 2 294 16 is_stmt 0 view .LVU247
 1227 00d0 0026     		movs	r6, #0
 1228 00d2 00E0     		b	.L92
 1229              	.L107:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 1230              		.loc 2 296 16 view .LVU248
 1231 00d4 0126     		movs	r6, #1
 1232              	.L92:
 1233              	.LVL124:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 1234              		.loc 2 296 16 view .LVU249
 1235              	.LBE18:
 1236              	.LBE19:
 117:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 1237              		.loc 1 117 5 is_stmt 1 view .LVU250
 1238 00d6 E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 1239 00d8 2046     		mov	r0, r4
 1240 00da FFF7FEFF 		bl	fifo_put_byte
 1241              	.LVL125:
 1242 00de 60B9     		cbnz	r0, .L119
 118:../../shields/Murata/src/alp.c ****   }
 1243              		.loc 1 118 5 view .LVU251
 1244 00e0 3246     		mov	r2, r6
 1245 00e2 291D     		adds	r1, r5, #4
 1246 00e4 2046     		mov	r0, r4
 1247 00e6 FFF7FEFF 		bl	fifo_put
 1248              	.LVL126:
 1249 00ea 0028     		cmp	r0, #0
 1250 00ec A7D0     		beq	.L79
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 36


 118:../../shields/Murata/src/alp.c ****   }
 1251              		.loc 1 118 5 is_stmt 0 discriminator 1 view .LVU252
 1252 00ee 5E4B     		ldr	r3, .L129+44
 1253 00f0 534A     		ldr	r2, .L129+4
 1254 00f2 7621     		movs	r1, #118
 1255 00f4 5348     		ldr	r0, .L129+8
 1256 00f6 FFF7FEFF 		bl	__assert_func
 1257              	.LVL127:
 1258              	.L119:
 117:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 1259              		.loc 1 117 5 discriminator 1 view .LVU253
 1260 00fa 5C4B     		ldr	r3, .L129+48
 1261 00fc 504A     		ldr	r2, .L129+4
 1262 00fe 7521     		movs	r1, #117
 1263 0100 5048     		ldr	r0, .L129+8
 1264 0102 FFF7FEFF 		bl	__assert_func
 1265              	.LVL128:
 1266              	.L113:
 117:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 1267              		.loc 1 117 5 discriminator 1 view .LVU254
 1268              	.LBE15:
 1269              	.LBB20:
 122:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1270              		.loc 1 122 5 is_stmt 1 view .LVU255
 122:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1271              		.loc 1 122 67 is_stmt 0 view .LVU256
 1272 0106 95F82810 		ldrb	r1, [r5, #40]	@ zero_extendqisi2
 122:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1273              		.loc 1 122 13 view .LVU257
 1274 010a 4900     		lsls	r1, r1, #1
 1275              	.LVL129:
 123:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1276              		.loc 1 123 5 is_stmt 1 view .LVU258
 1277 010c 01F0FE01 		and	r1, r1, #254
 1278              	.LVL130:
 123:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1279              		.loc 1 123 5 is_stmt 0 view .LVU259
 1280 0110 2046     		mov	r0, r4
 1281 0112 FFF7FEFF 		bl	fifo_put_byte
 1282              	.LVL131:
 123:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1283              		.loc 1 123 5 view .LVU260
 1284 0116 60BB     		cbnz	r0, .L120
 124:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 1285              		.loc 1 124 5 is_stmt 1 view .LVU261
 1286 0118 95F82910 		ldrb	r1, [r5, #41]	@ zero_extendqisi2
 1287 011c 2046     		mov	r0, r4
 1288 011e FFF7FEFF 		bl	fifo_put_byte
 1289              	.LVL132:
 1290 0122 60BB     		cbnz	r0, .L121
 125:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 1291              		.loc 1 125 5 view .LVU262
 1292 0124 1022     		movs	r2, #16
 1293 0126 2946     		mov	r1, r5
 1294 0128 2046     		mov	r0, r4
 1295 012a FFF7FEFF 		bl	fifo_put
 1296              	.LVL133:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 37


 1297 012e 60BB     		cbnz	r0, .L122
 126:../../shields/Murata/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 1298              		.loc 1 126 5 view .LVU263
 1299 0130 1022     		movs	r2, #16
 1300 0132 A918     		adds	r1, r5, r2
 1301 0134 2046     		mov	r0, r4
 1302 0136 FFF7FEFF 		bl	fifo_put
 1303              	.LVL134:
 1304 013a 60BB     		cbnz	r0, .L123
 127:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 1305              		.loc 1 127 5 view .LVU264
 127:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 1306              		.loc 1 127 25 is_stmt 0 view .LVU265
 1307 013c 2B6A     		ldr	r3, [r5, #32]
 1308 013e 1BBA     		rev	r3, r3
 127:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 1309              		.loc 1 127 14 view .LVU266
 1310 0140 0093     		str	r3, [sp]
 128:../../shields/Murata/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 1311              		.loc 1 128 5 is_stmt 1 view .LVU267
 1312 0142 0422     		movs	r2, #4
 1313 0144 6946     		mov	r1, sp
 1314 0146 2046     		mov	r0, r4
 1315 0148 FFF7FEFF 		bl	fifo_put
 1316              	.LVL135:
 1317 014c 48BB     		cbnz	r0, .L124
 129:../../shields/Murata/src/alp.c **** 
 1318              		.loc 1 129 5 view .LVU268
 129:../../shields/Murata/src/alp.c **** 
 1319              		.loc 1 129 27 is_stmt 0 view .LVU269
 1320 014e 6B6A     		ldr	r3, [r5, #36]
 1321 0150 1BBA     		rev	r3, r3
 129:../../shields/Murata/src/alp.c **** 
 1322              		.loc 1 129 14 view .LVU270
 1323 0152 0193     		str	r3, [sp, #4]
 131:../../shields/Murata/src/alp.c ****   }
 1324              		.loc 1 131 5 is_stmt 1 view .LVU271
 1325 0154 0422     		movs	r2, #4
 1326 0156 0DEB0201 		add	r1, sp, r2
 1327 015a 2046     		mov	r0, r4
 1328 015c FFF7FEFF 		bl	fifo_put
 1329              	.LVL136:
 1330 0160 0028     		cmp	r0, #0
 1331 0162 3FF46CAF 		beq	.L79
 131:../../shields/Murata/src/alp.c ****   }
 1332              		.loc 1 131 5 is_stmt 0 discriminator 1 view .LVU272
 1333 0166 424B     		ldr	r3, .L129+52
 1334 0168 354A     		ldr	r2, .L129+4
 1335 016a 8321     		movs	r1, #131
 1336 016c 3548     		ldr	r0, .L129+8
 1337 016e FFF7FEFF 		bl	__assert_func
 1338              	.LVL137:
 1339              	.L120:
 123:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1340              		.loc 1 123 5 discriminator 1 view .LVU273
 1341 0172 404B     		ldr	r3, .L129+56
 1342 0174 324A     		ldr	r2, .L129+4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 38


 1343 0176 7B21     		movs	r1, #123
 1344 0178 3248     		ldr	r0, .L129+8
 1345 017a FFF7FEFF 		bl	__assert_func
 1346              	.LVL138:
 1347              	.L121:
 124:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 1348              		.loc 1 124 5 discriminator 1 view .LVU274
 1349 017e 3E4B     		ldr	r3, .L129+60
 1350 0180 2F4A     		ldr	r2, .L129+4
 1351 0182 7C21     		movs	r1, #124
 1352 0184 2F48     		ldr	r0, .L129+8
 1353 0186 FFF7FEFF 		bl	__assert_func
 1354              	.LVL139:
 1355              	.L122:
 125:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 1356              		.loc 1 125 5 discriminator 1 view .LVU275
 1357 018a 3C4B     		ldr	r3, .L129+64
 1358 018c 2C4A     		ldr	r2, .L129+4
 1359 018e 7D21     		movs	r1, #125
 1360 0190 2C48     		ldr	r0, .L129+8
 1361 0192 FFF7FEFF 		bl	__assert_func
 1362              	.LVL140:
 1363              	.L123:
 126:../../shields/Murata/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 1364              		.loc 1 126 5 discriminator 1 view .LVU276
 1365 0196 3A4B     		ldr	r3, .L129+68
 1366 0198 294A     		ldr	r2, .L129+4
 1367 019a 7E21     		movs	r1, #126
 1368 019c 2948     		ldr	r0, .L129+8
 1369 019e FFF7FEFF 		bl	__assert_func
 1370              	.LVL141:
 1371              	.L124:
 128:../../shields/Murata/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 1372              		.loc 1 128 5 discriminator 1 view .LVU277
 1373 01a2 384B     		ldr	r3, .L129+72
 1374 01a4 264A     		ldr	r2, .L129+4
 1375 01a6 8021     		movs	r1, #128
 1376 01a8 2648     		ldr	r0, .L129+8
 1377 01aa FFF7FEFF 		bl	__assert_func
 1378              	.LVL142:
 1379              	.L114:
 128:../../shields/Murata/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 1380              		.loc 1 128 5 discriminator 1 view .LVU278
 1381              	.LBE20:
 1382              	.LBB21:
 135:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1383              		.loc 1 135 5 is_stmt 1 view .LVU279
 135:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1384              		.loc 1 135 68 is_stmt 0 view .LVU280
 1385 01ae 95F82010 		ldrb	r1, [r5, #32]	@ zero_extendqisi2
 135:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1386              		.loc 1 135 13 view .LVU281
 1387 01b2 4900     		lsls	r1, r1, #1
 1388              	.LVL143:
 136:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1389              		.loc 1 136 5 is_stmt 1 view .LVU282
 1390 01b4 01F0FE01 		and	r1, r1, #254
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 39


 1391              	.LVL144:
 136:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1392              		.loc 1 136 5 is_stmt 0 view .LVU283
 1393 01b8 2046     		mov	r0, r4
 1394 01ba FFF7FEFF 		bl	fifo_put_byte
 1395              	.LVL145:
 136:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1396              		.loc 1 136 5 view .LVU284
 1397 01be F8B9     		cbnz	r0, .L125
 137:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 1398              		.loc 1 137 5 is_stmt 1 view .LVU285
 1399 01c0 95F82110 		ldrb	r1, [r5, #33]	@ zero_extendqisi2
 1400 01c4 2046     		mov	r0, r4
 1401 01c6 FFF7FEFF 		bl	fifo_put_byte
 1402              	.LVL146:
 1403 01ca F8B9     		cbnz	r0, .L126
 138:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 1404              		.loc 1 138 5 view .LVU286
 1405 01cc 0822     		movs	r2, #8
 1406 01ce 2946     		mov	r1, r5
 1407 01d0 2046     		mov	r0, r4
 1408 01d2 FFF7FEFF 		bl	fifo_put
 1409              	.LVL147:
 1410 01d6 F8B9     		cbnz	r0, .L127
 139:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 1411              		.loc 1 139 5 view .LVU287
 1412 01d8 0822     		movs	r2, #8
 1413 01da A918     		adds	r1, r5, r2
 1414 01dc 2046     		mov	r0, r4
 1415 01de FFF7FEFF 		bl	fifo_put
 1416              	.LVL148:
 1417 01e2 F8B9     		cbnz	r0, .L128
 140:../../shields/Murata/src/alp.c ****   }
 1418              		.loc 1 140 5 view .LVU288
 1419 01e4 1022     		movs	r2, #16
 1420 01e6 A918     		adds	r1, r5, r2
 1421 01e8 2046     		mov	r0, r4
 1422 01ea FFF7FEFF 		bl	fifo_put
 1423              	.LVL149:
 1424 01ee 0028     		cmp	r0, #0
 1425 01f0 3FF425AF 		beq	.L79
 140:../../shields/Murata/src/alp.c ****   }
 1426              		.loc 1 140 5 is_stmt 0 discriminator 1 view .LVU289
 1427 01f4 244B     		ldr	r3, .L129+76
 1428 01f6 124A     		ldr	r2, .L129+4
 1429 01f8 8C21     		movs	r1, #140
 1430 01fa 1248     		ldr	r0, .L129+8
 1431 01fc FFF7FEFF 		bl	__assert_func
 1432              	.LVL150:
 1433              	.L125:
 136:../../shields/Murata/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1434              		.loc 1 136 5 discriminator 1 view .LVU290
 1435 0200 1C4B     		ldr	r3, .L129+56
 1436 0202 0F4A     		ldr	r2, .L129+4
 1437 0204 8821     		movs	r1, #136
 1438 0206 0F48     		ldr	r0, .L129+8
 1439 0208 FFF7FEFF 		bl	__assert_func
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 40


 1440              	.LVL151:
 1441              	.L126:
 137:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 1442              		.loc 1 137 5 discriminator 1 view .LVU291
 1443 020c 1F4B     		ldr	r3, .L129+80
 1444 020e 0C4A     		ldr	r2, .L129+4
 1445 0210 8921     		movs	r1, #137
 1446 0212 0C48     		ldr	r0, .L129+8
 1447 0214 FFF7FEFF 		bl	__assert_func
 1448              	.LVL152:
 1449              	.L127:
 138:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 1450              		.loc 1 138 5 discriminator 1 view .LVU292
 1451 0218 1D4B     		ldr	r3, .L129+84
 1452 021a 094A     		ldr	r2, .L129+4
 1453 021c 8A21     		movs	r1, #138
 1454 021e 0948     		ldr	r0, .L129+8
 1455 0220 FFF7FEFF 		bl	__assert_func
 1456              	.LVL153:
 1457              	.L128:
 139:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 1458              		.loc 1 139 5 discriminator 1 view .LVU293
 1459 0224 1B4B     		ldr	r3, .L129+88
 1460 0226 064A     		ldr	r2, .L129+4
 1461 0228 8B21     		movs	r1, #139
 1462 022a 0648     		ldr	r0, .L129+8
 1463 022c FFF7FEFF 		bl	__assert_func
 1464              	.LVL154:
 1465              	.L115:
 139:../../shields/Murata/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 1466              		.loc 1 139 5 discriminator 1 view .LVU294
 1467              	.LBE21:
 144:../../shields/Murata/src/alp.c ****   }
 1468              		.loc 1 144 5 discriminator 1 view .LVU295
 1469 0230 194B     		ldr	r3, .L129+92
 1470 0232 034A     		ldr	r2, .L129+4
 1471 0234 9021     		movs	r1, #144
 1472 0236 0348     		ldr	r0, .L129+8
 1473 0238 FFF7FEFF 		bl	__assert_func
 1474              	.LVL155:
 1475              	.L130:
 1476              		.align	2
 1477              	.L129:
 1478 023c 00000000 		.word	.LC13
 1479 0240 00000000 		.word	.LANCHOR8
 1480 0244 40000000 		.word	.LC1
 1481 0248 10000000 		.word	.LC14
 1482 024c 44000000 		.word	.LC15
 1483 0250 70000000 		.word	.LC16
 1484 0254 C0000000 		.word	.LC17
 1485 0258 18010000 		.word	.LC18
 1486 025c 38000000 		.word	.LC4
 1487 0260 00000000 		.word	.LANCHOR2
 1488 0264 40000000 		.word	.LC5
 1489 0268 D4010000 		.word	.LC20
 1490 026c 74010000 		.word	.LC19
 1491 0270 A4030000 		.word	.LC26
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 41


 1492 0274 30020000 		.word	.LC21
 1493 0278 64020000 		.word	.LC22
 1494 027c C4020000 		.word	.LC23
 1495 0280 18030000 		.word	.LC24
 1496 0284 6C030000 		.word	.LC25
 1497 0288 E4040000 		.word	.LC30
 1498 028c DC030000 		.word	.LC27
 1499 0290 3C040000 		.word	.LC28
 1500 0294 90040000 		.word	.LC29
 1501 0298 38050000 		.word	.LC31
 1502              		.cfi_endproc
 1503              	.LFE7:
 1505              		.section	.text.alp_append_return_file_data_action,"ax",%progbits
 1506              		.align	1
 1507              		.global	alp_append_return_file_data_action
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	alp_append_return_file_data_action:
 1514              	.LVL156:
 1515              	.LFB8:
 150:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss7SUCCESS);
 1516              		.loc 1 150 121 is_stmt 1 view -0
 1517              		.cfi_startproc
 1518              		@ args = 4, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 150:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss7SUCCESS);
 1520              		.loc 1 150 121 is_stmt 0 view .LVU297
 1521 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1522              	.LCFI32:
 1523              		.cfi_def_cfa_offset 24
 1524              		.cfi_offset 3, -24
 1525              		.cfi_offset 4, -20
 1526              		.cfi_offset 5, -16
 1527              		.cfi_offset 6, -12
 1528              		.cfi_offset 7, -8
 1529              		.cfi_offset 14, -4
 1530 0002 0446     		mov	r4, r0
 1531 0004 0F46     		mov	r7, r1
 1532 0006 1646     		mov	r6, r2
 1533 0008 1D46     		mov	r5, r3
 151:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1534              		.loc 1 151 3 is_stmt 1 view .LVU298
 1535 000a 2021     		movs	r1, #32
 1536              	.LVL157:
 151:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1537              		.loc 1 151 3 is_stmt 0 view .LVU299
 1538 000c FFF7FEFF 		bl	fifo_put_byte
 1539              	.LVL158:
 151:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1540              		.loc 1 151 3 view .LVU300
 1541 0010 98B9     		cbnz	r0, .L136
 152:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1542              		.loc 1 152 3 is_stmt 1 view .LVU301
 1543 0012 3946     		mov	r1, r7
 1544 0014 2046     		mov	r0, r4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 42


 1545 0016 FFF7FEFF 		bl	fifo_put_byte
 1546              	.LVL159:
 1547 001a A0B9     		cbnz	r0, .L137
 153:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, length);
 1548              		.loc 1 153 3 view .LVU302
 1549 001c 3146     		mov	r1, r6
 1550 001e 2046     		mov	r0, r4
 1551 0020 FFF7FEFF 		bl	alp_append_length_operand
 1552              	.LVL160:
 154:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 1553              		.loc 1 154 3 view .LVU303
 1554 0024 2946     		mov	r1, r5
 1555 0026 2046     		mov	r0, r4
 1556 0028 FFF7FEFF 		bl	alp_append_length_operand
 1557              	.LVL161:
 155:../../shields/Murata/src/alp.c **** }
 1558              		.loc 1 155 3 view .LVU304
 1559 002c AAB2     		uxth	r2, r5
 1560 002e 0699     		ldr	r1, [sp, #24]
 1561 0030 2046     		mov	r0, r4
 1562 0032 FFF7FEFF 		bl	fifo_put
 1563              	.LVL162:
 1564 0036 60B9     		cbnz	r0, .L138
 156:../../shields/Murata/src/alp.c **** 
 1565              		.loc 1 156 1 is_stmt 0 view .LVU305
 1566 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1567              	.LVL163:
 1568              	.L136:
 151:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1569              		.loc 1 151 3 discriminator 1 view .LVU306
 1570 003a 094B     		ldr	r3, .L139
 1571 003c 094A     		ldr	r2, .L139+4
 1572 003e 9721     		movs	r1, #151
 1573 0040 0948     		ldr	r0, .L139+8
 1574 0042 FFF7FEFF 		bl	__assert_func
 1575              	.LVL164:
 1576              	.L137:
 152:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1577              		.loc 1 152 3 discriminator 1 view .LVU307
 1578 0046 094B     		ldr	r3, .L139+12
 1579 0048 064A     		ldr	r2, .L139+4
 1580 004a 9821     		movs	r1, #152
 1581 004c 0648     		ldr	r0, .L139+8
 1582 004e FFF7FEFF 		bl	__assert_func
 1583              	.LVL165:
 1584              	.L138:
 155:../../shields/Murata/src/alp.c **** }
 1585              		.loc 1 155 3 discriminator 1 view .LVU308
 1586 0052 074B     		ldr	r3, .L139+16
 1587 0054 034A     		ldr	r2, .L139+4
 1588 0056 9B21     		movs	r1, #155
 1589 0058 0348     		ldr	r0, .L139+8
 1590 005a FFF7FEFF 		bl	__assert_func
 1591              	.LVL166:
 1592              	.L140:
 1593 005e 00BF     		.align	2
 1594              	.L139:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 43


 1595 0060 00000000 		.word	.LC32
 1596 0064 00000000 		.word	.LANCHOR9
 1597 0068 40000000 		.word	.LC1
 1598 006c 00000000 		.word	.LC12
 1599 0070 3C000000 		.word	.LC33
 1600              		.cfi_endproc
 1601              	.LFE8:
 1603              		.section	.text.alp_parse_action,"ax",%progbits
 1604              		.align	1
 1605              		.global	alp_parse_action
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1609              		.fpu fpv4-sp-d16
 1611              	alp_parse_action:
 1612              	.LVL167:
 1613              	.LFB16:
 252:../../shields/Murata/src/alp.c **** 
 253:../../shields/Murata/src/alp.c **** void alp_parse_action(fifo_t* fifo, alp_action_t* action) {
 1614              		.loc 1 253 59 is_stmt 1 view -0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 8
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              		.loc 1 253 59 is_stmt 0 view .LVU310
 1619 0000 30B5     		push	{r4, r5, lr}
 1620              	.LCFI33:
 1621              		.cfi_def_cfa_offset 12
 1622              		.cfi_offset 4, -12
 1623              		.cfi_offset 5, -8
 1624              		.cfi_offset 14, -4
 1625 0002 83B0     		sub	sp, sp, #12
 1626              	.LCFI34:
 1627              		.cfi_def_cfa_offset 24
 1628 0004 0546     		mov	r5, r0
 1629 0006 0C46     		mov	r4, r1
 254:../../shields/Murata/src/alp.c ****   uint8_t op;
 1630              		.loc 1 254 3 is_stmt 1 view .LVU311
 255:../../shields/Murata/src/alp.c ****   assert(fifo_pop(fifo, &op, 1) == oss7SUCCESS);
 1631              		.loc 1 255 3 view .LVU312
 1632 0008 0122     		movs	r2, #1
 1633 000a 0DF10701 		add	r1, sp, #7
 1634              	.LVL168:
 1635              		.loc 1 255 3 is_stmt 0 view .LVU313
 1636 000e FFF7FEFF 		bl	fifo_pop
 1637              	.LVL169:
 1638              		.loc 1 255 3 view .LVU314
 1639 0012 F0B9     		cbnz	r0, .L151
 256:../../shields/Murata/src/alp.c ****   bool b6 = (op >> 6) & 1;
 1640              		.loc 1 256 3 is_stmt 1 view .LVU315
 1641              		.loc 1 256 23 is_stmt 0 view .LVU316
 1642 0014 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1643              		.loc 1 256 8 view .LVU317
 1644 0018 C1F38012 		ubfx	r2, r1, #6, #1
 1645              	.LVL170:
 257:../../shields/Murata/src/alp.c ****   bool b7 = op >> 7;
 1646              		.loc 1 257 3 is_stmt 1 view .LVU318
 1647              		.loc 1 257 8 is_stmt 0 view .LVU319
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 44


 1648 001c CB09     		lsrs	r3, r1, #7
 1649              	.LVL171:
 258:../../shields/Murata/src/alp.c ****   op &= 0x3F; // op is in b5-b0
 1650              		.loc 1 258 3 is_stmt 1 view .LVU320
 1651              		.loc 1 258 6 is_stmt 0 view .LVU321
 1652 001e 01F03F01 		and	r1, r1, #63
 1653 0022 8DF80710 		strb	r1, [sp, #7]
 259:../../shields/Murata/src/alp.c ****   action->operation = op;
 1654              		.loc 1 259 3 is_stmt 1 view .LVU322
 1655              		.loc 1 259 21 is_stmt 0 view .LVU323
 1656 0026 2170     		strb	r1, [r4]
 260:../../shields/Murata/src/alp.c ****   switch(op) {
 1657              		.loc 1 260 3 is_stmt 1 view .LVU324
 1658 0028 0439     		subs	r1, r1, #4
 1659 002a 1F29     		cmp	r1, #31
 1660 002c 2CD8     		bhi	.L143
 1661 002e DFE801F0 		tbb	[pc, r1]
 1662              	.L145:
 1663 0032 16       		.byte	(.L148-.L145)/2
 1664 0033 2B       		.byte	(.L143-.L145)/2
 1665 0034 2B       		.byte	(.L143-.L145)/2
 1666 0035 2B       		.byte	(.L143-.L145)/2
 1667 0036 2B       		.byte	(.L143-.L145)/2
 1668 0037 2B       		.byte	(.L143-.L145)/2
 1669 0038 2B       		.byte	(.L143-.L145)/2
 1670 0039 2B       		.byte	(.L143-.L145)/2
 1671 003a 2B       		.byte	(.L143-.L145)/2
 1672 003b 2B       		.byte	(.L143-.L145)/2
 1673 003c 2B       		.byte	(.L143-.L145)/2
 1674 003d 2B       		.byte	(.L143-.L145)/2
 1675 003e 2B       		.byte	(.L143-.L145)/2
 1676 003f 2B       		.byte	(.L143-.L145)/2
 1677 0040 2B       		.byte	(.L143-.L145)/2
 1678 0041 2B       		.byte	(.L143-.L145)/2
 1679 0042 2B       		.byte	(.L143-.L145)/2
 1680 0043 2B       		.byte	(.L143-.L145)/2
 1681 0044 2B       		.byte	(.L143-.L145)/2
 1682 0045 2B       		.byte	(.L143-.L145)/2
 1683 0046 2B       		.byte	(.L143-.L145)/2
 1684 0047 2B       		.byte	(.L143-.L145)/2
 1685 0048 2B       		.byte	(.L143-.L145)/2
 1686 0049 2B       		.byte	(.L143-.L145)/2
 1687 004a 2B       		.byte	(.L143-.L145)/2
 1688 004b 2B       		.byte	(.L143-.L145)/2
 1689 004c 2B       		.byte	(.L143-.L145)/2
 1690 004d 2B       		.byte	(.L143-.L145)/2
 1691 004e 1C       		.byte	(.L147-.L145)/2
 1692 004f 2B       		.byte	(.L143-.L145)/2
 1693 0050 26       		.byte	(.L146-.L145)/2
 1694 0051 21       		.byte	(.L144-.L145)/2
 1695              	.LVL172:
 1696              		.p2align 1
 1697              	.L151:
 255:../../shields/Murata/src/alp.c ****   bool b6 = (op >> 6) & 1;
 1698              		.loc 1 255 3 is_stmt 0 discriminator 1 view .LVU325
 1699 0052 114B     		ldr	r3, .L152
 1700 0054 114A     		ldr	r2, .L152+4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 45


 1701 0056 FF21     		movs	r1, #255
 1702 0058 1148     		ldr	r0, .L152+8
 1703 005a FFF7FEFF 		bl	__assert_func
 1704              	.LVL173:
 1705              	.L148:
 261:../../shields/Murata/src/alp.c ****     case ALP_OP_WRITE_FILE_DATA:
 262:../../shields/Murata/src/alp.c ****       parse_op_write_file_data(fifo, action);
 1706              		.loc 1 262 7 is_stmt 1 view .LVU326
 1707 005e 2146     		mov	r1, r4
 1708 0060 2846     		mov	r0, r5
 1709 0062 FFF7FEFF 		bl	parse_op_write_file_data
 1710              	.LVL174:
 263:../../shields/Murata/src/alp.c ****       break;
 1711              		.loc 1 263 7 view .LVU327
 1712              	.L141:
 264:../../shields/Murata/src/alp.c ****     case ALP_OP_RETURN_FILE_DATA:
 265:../../shields/Murata/src/alp.c ****       parse_op_return_file_data(fifo, action);
 266:../../shields/Murata/src/alp.c ****       break;
 267:../../shields/Murata/src/alp.c ****     case ALP_OP_RETURN_TAG:
 268:../../shields/Murata/src/alp.c ****       parse_op_return_tag(fifo, action, b6, b7);
 269:../../shields/Murata/src/alp.c ****       break;
 270:../../shields/Murata/src/alp.c ****     case ALP_OP_RETURN_STATUS:
 271:../../shields/Murata/src/alp.c ****       parse_op_return_status(fifo, action, b6, b7);
 272:../../shields/Murata/src/alp.c ****       break;
 273:../../shields/Murata/src/alp.c ****     default:
 274:../../shields/Murata/src/alp.c ****       DPRINT("op %x not implemented", op);
 275:../../shields/Murata/src/alp.c ****       assert(false);
 276:../../shields/Murata/src/alp.c ****   }
 277:../../shields/Murata/src/alp.c **** 
 278:../../shields/Murata/src/alp.c ****   DPRINT("parsed action");
 279:../../shields/Murata/src/alp.c **** }
 1713              		.loc 1 279 1 is_stmt 0 view .LVU328
 1714 0066 03B0     		add	sp, sp, #12
 1715              	.LCFI35:
 1716              		.cfi_remember_state
 1717              		.cfi_def_cfa_offset 12
 1718              		@ sp needed
 1719 0068 30BD     		pop	{r4, r5, pc}
 1720              	.LVL175:
 1721              	.L147:
 1722              	.LCFI36:
 1723              		.cfi_restore_state
 265:../../shields/Murata/src/alp.c ****       break;
 1724              		.loc 1 265 7 is_stmt 1 view .LVU329
 1725 006a 2146     		mov	r1, r4
 1726 006c 2846     		mov	r0, r5
 1727 006e FFF7FEFF 		bl	parse_op_return_file_data
 1728              	.LVL176:
 266:../../shields/Murata/src/alp.c ****     case ALP_OP_RETURN_TAG:
 1729              		.loc 1 266 7 view .LVU330
 1730 0072 F8E7     		b	.L141
 1731              	.LVL177:
 1732              	.L144:
 268:../../shields/Murata/src/alp.c ****       break;
 1733              		.loc 1 268 7 view .LVU331
 1734 0074 2146     		mov	r1, r4
 1735 0076 2846     		mov	r0, r5
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 46


 1736 0078 FFF7FEFF 		bl	parse_op_return_tag
 1737              	.LVL178:
 269:../../shields/Murata/src/alp.c ****     case ALP_OP_RETURN_STATUS:
 1738              		.loc 1 269 7 view .LVU332
 1739 007c F3E7     		b	.L141
 1740              	.LVL179:
 1741              	.L146:
 271:../../shields/Murata/src/alp.c ****       break;
 1742              		.loc 1 271 7 view .LVU333
 1743 007e 2146     		mov	r1, r4
 1744 0080 2846     		mov	r0, r5
 1745 0082 FFF7FEFF 		bl	parse_op_return_status
 1746              	.LVL180:
 272:../../shields/Murata/src/alp.c ****     default:
 1747              		.loc 1 272 7 view .LVU334
 1748 0086 EEE7     		b	.L141
 1749              	.LVL181:
 1750              	.L143:
 274:../../shields/Murata/src/alp.c ****       assert(false);
 1751              		.loc 1 274 42 view .LVU335
 275:../../shields/Murata/src/alp.c ****   }
 1752              		.loc 1 275 7 view .LVU336
 1753 0088 064B     		ldr	r3, .L152+12
 1754              	.LVL182:
 275:../../shields/Murata/src/alp.c ****   }
 1755              		.loc 1 275 7 is_stmt 0 view .LVU337
 1756 008a 044A     		ldr	r2, .L152+4
 1757              	.LVL183:
 275:../../shields/Murata/src/alp.c ****   }
 1758              		.loc 1 275 7 view .LVU338
 1759 008c 40F21311 		movw	r1, #275
 1760 0090 0348     		ldr	r0, .L152+8
 1761 0092 FFF7FEFF 		bl	__assert_func
 1762              	.LVL184:
 1763              	.L153:
 1764 0096 00BF     		.align	2
 1765              	.L152:
 1766 0098 00000000 		.word	.LC34
 1767 009c 00000000 		.word	.LANCHOR10
 1768 00a0 40000000 		.word	.LC1
 1769 00a4 38000000 		.word	.LC4
 1770              		.cfi_endproc
 1771              	.LFE16:
 1773              		.section	.text.alp_append_tag_request_action,"ax",%progbits
 1774              		.align	1
 1775              		.global	alp_append_tag_request_action
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu fpv4-sp-d16
 1781              	alp_append_tag_request_action:
 1782              	.LVL185:
 1783              	.LFB18:
 280:../../shields/Murata/src/alp.c **** 
 281:../../shields/Murata/src/alp.c **** uint8_t alp_get_expected_response_length(uint8_t* alp_command, uint8_t alp_command_length) {
 282:../../shields/Murata/src/alp.c ****   uint8_t expected_response_length = 0;
 283:../../shields/Murata/src/alp.c ****   fifo_t fifo;
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 47


 284:../../shields/Murata/src/alp.c ****   fifo_init_filled(&fifo, alp_command, alp_command_length, alp_command_length + 1);
 285:../../shields/Murata/src/alp.c **** 
 286:../../shields/Murata/src/alp.c ****   while(fifo_get_size(&fifo) > 0) {
 287:../../shields/Murata/src/alp.c ****     alp_control_t control;
 288:../../shields/Murata/src/alp.c ****     fifo_pop(&fifo, (uint8_t*)&control.raw, 1);
 289:../../shields/Murata/src/alp.c ****     switch(control.operation) {
 290:../../shields/Murata/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 291:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, 1); // skip file ID
 292:../../shields/Murata/src/alp.c ****         uint32_t offset = alp_parse_length_operand(&fifo); // offset
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_parse_length_operand(&fifo); // the file length
 294:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 295:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 296:../../shields/Murata/src/alp.c ****         expected_response_length += 1; // the opcode
 297:../../shields/Murata/src/alp.c ****         break;
 298:../../shields/Murata/src/alp.c ****       case ALP_OP_REQUEST_TAG:
 299:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, 1); // skip tag ID operand
 300:../../shields/Murata/src/alp.c ****         break;
 301:../../shields/Murata/src/alp.c ****       case ALP_OP_RETURN_FILE_DATA:
 302:../../shields/Murata/src/alp.c ****       case ALP_OP_WRITE_FILE_DATA:
 303:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, 1); // skip file ID
 304:../../shields/Murata/src/alp.c ****         alp_parse_length_operand(&fifo); // offset
 305:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, alp_parse_length_operand(&fifo));
 306:../../shields/Murata/src/alp.c ****         break;
 307:../../shields/Murata/src/alp.c ****       case ALP_OP_FORWARD: ;
 308:../../shields/Murata/src/alp.c ****         uint8_t itf_id;
 309:../../shields/Murata/src/alp.c ****         fifo_pop(&fifo, &itf_id, 1);
 310:../../shields/Murata/src/alp.c ****         if(itf_id == ALP_ITF_ID_D7ASP) {
 311:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 312:../../shields/Murata/src/alp.c ****           d7ap_addressee_ctrl_t addressee_ctrl;
 313:../../shields/Murata/src/alp.c ****           fifo_pop(&fifo, (uint8_t*)&addressee_ctrl.raw, 1);
 314:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 2 + d7ap_addressee_id_length(addressee_ctrl.id_type)); // skip addressee
 315:../../shields/Murata/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 316:../../shields/Murata/src/alp.c ****         }
 317:../../shields/Murata/src/alp.c ****         // other ITFs have no configuration
 318:../../shields/Murata/src/alp.c ****         break;
 319:../../shields/Murata/src/alp.c ****       case ALP_OP_WRITE_FILE_PROPERTIES:
 320:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, 1 + sizeof(fs_file_header_t)); // skip file ID & header
 321:../../shields/Murata/src/alp.c ****         break;
 322:../../shields/Murata/src/alp.c ****       // TODO other operations
 323:../../shields/Murata/src/alp.c ****       default:
 324:../../shields/Murata/src/alp.c ****         DPRINT("op %i not implemented", control.operation);
 325:../../shields/Murata/src/alp.c ****         assert(false);
 326:../../shields/Murata/src/alp.c ****     }
 327:../../shields/Murata/src/alp.c ****   }
 328:../../shields/Murata/src/alp.c **** 
 329:../../shields/Murata/src/alp.c ****   DPRINT("Expected ALP response length=%i", expected_response_length);
 330:../../shields/Murata/src/alp.c ****   return expected_response_length;
 331:../../shields/Murata/src/alp.c **** }
 332:../../shields/Murata/src/alp.c **** 
 333:../../shields/Murata/src/alp.c **** void alp_append_tag_request_action(fifo_t* fifo, uint8_t tag_id, bool eop) {
 1784              		.loc 1 333 76 is_stmt 1 view -0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 0
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              		.loc 1 333 76 is_stmt 0 view .LVU340
 1789 0000 38B5     		push	{r3, r4, r5, lr}
 1790              	.LCFI37:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 48


 1791              		.cfi_def_cfa_offset 16
 1792              		.cfi_offset 3, -16
 1793              		.cfi_offset 4, -12
 1794              		.cfi_offset 5, -8
 1795              		.cfi_offset 14, -4
 1796 0002 0446     		mov	r4, r0
 1797 0004 0D46     		mov	r5, r1
 334:../../shields/Murata/src/alp.c ****   DPRINT("append tag %i", tag_id);
 1798              		.loc 1 334 34 is_stmt 1 view .LVU341
 335:../../shields/Murata/src/alp.c ****   uint8_t op = ALP_OP_REQUEST_TAG | (eop << 7);
 1799              		.loc 1 335 3 view .LVU342
 1800              		.loc 1 335 42 is_stmt 0 view .LVU343
 1801 0006 D201     		lsls	r2, r2, #7
 1802              	.LVL186:
 1803              		.loc 1 335 35 view .LVU344
 1804 0008 42F03401 		orr	r1, r2, #52
 1805              	.LVL187:
 336:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1806              		.loc 1 336 3 is_stmt 1 view .LVU345
 1807 000c 01F0B401 		and	r1, r1, #180
 1808              	.LVL188:
 1809              		.loc 1 336 3 is_stmt 0 view .LVU346
 1810 0010 FFF7FEFF 		bl	fifo_put_byte
 1811              	.LVL189:
 1812              		.loc 1 336 3 view .LVU347
 1813 0014 28B9     		cbnz	r0, .L158
 337:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, tag_id) == oss7SUCCESS);
 1814              		.loc 1 337 3 is_stmt 1 view .LVU348
 1815 0016 2946     		mov	r1, r5
 1816 0018 2046     		mov	r0, r4
 1817 001a FFF7FEFF 		bl	fifo_put_byte
 1818              	.LVL190:
 1819 001e 38B9     		cbnz	r0, .L159
 338:../../shields/Murata/src/alp.c **** }
 1820              		.loc 1 338 1 is_stmt 0 view .LVU349
 1821 0020 38BD     		pop	{r3, r4, r5, pc}
 1822              	.LVL191:
 1823              	.L158:
 336:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1824              		.loc 1 336 3 discriminator 1 view .LVU350
 1825 0022 074B     		ldr	r3, .L160
 1826 0024 074A     		ldr	r2, .L160+4
 1827 0026 4FF4A871 		mov	r1, #336
 1828 002a 0748     		ldr	r0, .L160+8
 1829 002c FFF7FEFF 		bl	__assert_func
 1830              	.LVL192:
 1831              	.L159:
 337:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, tag_id) == oss7SUCCESS);
 1832              		.loc 1 337 3 discriminator 1 view .LVU351
 1833 0030 064B     		ldr	r3, .L160+12
 1834 0032 044A     		ldr	r2, .L160+4
 1835 0034 40F25111 		movw	r1, #337
 1836 0038 0348     		ldr	r0, .L160+8
 1837 003a FFF7FEFF 		bl	__assert_func
 1838              	.LVL193:
 1839              	.L161:
 1840 003e 00BF     		.align	2
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 49


 1841              	.L160:
 1842 0040 00000000 		.word	.LC35
 1843 0044 00000000 		.word	.LANCHOR11
 1844 0048 40000000 		.word	.LC1
 1845 004c 28000000 		.word	.LC36
 1846              		.cfi_endproc
 1847              	.LFE18:
 1849              		.section	.text.alp_append_read_file_data_action,"ax",%progbits
 1850              		.align	1
 1851              		.global	alp_append_read_file_data_action
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	alp_append_read_file_data_action:
 1858              	.LVL194:
 1859              	.LFB19:
 339:../../shields/Murata/src/alp.c **** 
 340:../../shields/Murata/src/alp.c **** void alp_append_read_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t leng
 1860              		.loc 1 340 127 is_stmt 1 view -0
 1861              		.cfi_startproc
 1862              		@ args = 8, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              		.loc 1 340 127 is_stmt 0 view .LVU353
 1865 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1866              	.LCFI38:
 1867              		.cfi_def_cfa_offset 24
 1868              		.cfi_offset 3, -24
 1869              		.cfi_offset 4, -20
 1870              		.cfi_offset 5, -16
 1871              		.cfi_offset 6, -12
 1872              		.cfi_offset 7, -8
 1873              		.cfi_offset 14, -4
 1874 0002 0446     		mov	r4, r0
 1875 0004 0E46     		mov	r6, r1
 1876 0006 1746     		mov	r7, r2
 1877 0008 1D46     		mov	r5, r3
 341:../../shields/Murata/src/alp.c ****   uint8_t op = ALP_OP_READ_FILE_DATA | (resp << 6) | (group << 7);
 1878              		.loc 1 341 3 is_stmt 1 view .LVU354
 1879              		.loc 1 341 46 is_stmt 0 view .LVU355
 1880 000a 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 1881              	.LVL195:
 1882              		.loc 1 341 46 view .LVU356
 1883 000e 8901     		lsls	r1, r1, #6
 1884              		.loc 1 341 38 view .LVU357
 1885 0010 41F00101 		orr	r1, r1, #1
 1886 0014 49B2     		sxtb	r1, r1
 1887              		.loc 1 341 52 view .LVU358
 1888 0016 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 1889              	.LVL196:
 1890              		.loc 1 341 52 view .LVU359
 1891 001a 41EAC311 		orr	r1, r1, r3, lsl #7
 1892              	.LVL197:
 342:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1893              		.loc 1 342 3 is_stmt 1 view .LVU360
 1894 001e 01F0C101 		and	r1, r1, #193
 1895              	.LVL198:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 50


 1896              		.loc 1 342 3 is_stmt 0 view .LVU361
 1897 0022 FFF7FEFF 		bl	fifo_put_byte
 1898              	.LVL199:
 1899              		.loc 1 342 3 view .LVU362
 1900 0026 48B9     		cbnz	r0, .L165
 343:../../shields/Murata/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1901              		.loc 1 343 3 is_stmt 1 view .LVU363
 1902 0028 3A46     		mov	r2, r7
 1903 002a 3146     		mov	r1, r6
 1904 002c 2046     		mov	r0, r4
 1905 002e FFF7FEFF 		bl	alp_append_file_offset_operand
 1906              	.LVL200:
 344:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, length);
 1907              		.loc 1 344 3 view .LVU364
 1908 0032 2946     		mov	r1, r5
 1909 0034 2046     		mov	r0, r4
 1910 0036 FFF7FEFF 		bl	alp_append_length_operand
 1911              	.LVL201:
 345:../../shields/Murata/src/alp.c **** }
 1912              		.loc 1 345 1 is_stmt 0 view .LVU365
 1913 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1914              	.LVL202:
 1915              	.L165:
 342:../../shields/Murata/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1916              		.loc 1 342 3 discriminator 1 view .LVU366
 1917 003c 034B     		ldr	r3, .L166
 1918 003e 044A     		ldr	r2, .L166+4
 1919 0040 4FF4AB71 		mov	r1, #342
 1920 0044 0348     		ldr	r0, .L166+8
 1921 0046 FFF7FEFF 		bl	__assert_func
 1922              	.LVL203:
 1923              	.L167:
 1924 004a 00BF     		.align	2
 1925              	.L166:
 1926 004c 00000000 		.word	.LC35
 1927 0050 00000000 		.word	.LANCHOR12
 1928 0054 40000000 		.word	.LC1
 1929              		.cfi_endproc
 1930              	.LFE19:
 1932              		.section	.text.alp_append_write_file_data_action,"ax",%progbits
 1933              		.align	1
 1934              		.global	alp_append_write_file_data_action
 1935              		.syntax unified
 1936              		.thumb
 1937              		.thumb_func
 1938              		.fpu fpv4-sp-d16
 1940              	alp_append_write_file_data_action:
 1941              	.LVL204:
 1942              	.LFB20:
 346:../../shields/Murata/src/alp.c **** 
 347:../../shields/Murata/src/alp.c **** void alp_append_write_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t len
 1943              		.loc 1 347 143 is_stmt 1 view -0
 1944              		.cfi_startproc
 1945              		@ args = 12, pretend = 0, frame = 0
 1946              		@ frame_needed = 0, uses_anonymous_args = 0
 1947              		.loc 1 347 143 is_stmt 0 view .LVU368
 1948 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 51


 1949              	.LCFI39:
 1950              		.cfi_def_cfa_offset 24
 1951              		.cfi_offset 3, -24
 1952              		.cfi_offset 4, -20
 1953              		.cfi_offset 5, -16
 1954              		.cfi_offset 6, -12
 1955              		.cfi_offset 7, -8
 1956              		.cfi_offset 14, -4
 1957 0002 0446     		mov	r4, r0
 1958 0004 0E46     		mov	r6, r1
 1959 0006 1746     		mov	r7, r2
 1960 0008 1D46     		mov	r5, r3
 348:../../shields/Murata/src/alp.c ****   uint8_t op = ALP_OP_WRITE_FILE_DATA | (resp << 6) | (group << 7);
 1961              		.loc 1 348 3 is_stmt 1 view .LVU369
 1962              		.loc 1 348 47 is_stmt 0 view .LVU370
 1963 000a 9DF81C10 		ldrb	r1, [sp, #28]	@ zero_extendqisi2
 1964              	.LVL205:
 1965              		.loc 1 348 47 view .LVU371
 1966 000e 8901     		lsls	r1, r1, #6
 1967              		.loc 1 348 39 view .LVU372
 1968 0010 41F00401 		orr	r1, r1, #4
 1969 0014 49B2     		sxtb	r1, r1
 1970              		.loc 1 348 53 view .LVU373
 1971 0016 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1972              	.LVL206:
 1973              		.loc 1 348 53 view .LVU374
 1974 001a 41EAC311 		orr	r1, r1, r3, lsl #7
 1975              	.LVL207:
 349:../../shields/Murata/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1976              		.loc 1 349 3 is_stmt 1 view .LVU375
 1977 001e 01F0C401 		and	r1, r1, #196
 1978              	.LVL208:
 1979              		.loc 1 349 3 is_stmt 0 view .LVU376
 1980 0022 FFF7FEFF 		bl	fifo_put_byte
 1981              	.LVL209:
 1982              		.loc 1 349 3 view .LVU377
 1983 0026 78B9     		cbnz	r0, .L172
 350:../../shields/Murata/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1984              		.loc 1 350 3 is_stmt 1 view .LVU378
 1985 0028 3A46     		mov	r2, r7
 1986 002a 3146     		mov	r1, r6
 1987 002c 2046     		mov	r0, r4
 1988 002e FFF7FEFF 		bl	alp_append_file_offset_operand
 1989              	.LVL210:
 351:../../shields/Murata/src/alp.c ****   alp_append_length_operand(fifo, length);
 1990              		.loc 1 351 3 view .LVU379
 1991 0032 2946     		mov	r1, r5
 1992 0034 2046     		mov	r0, r4
 1993 0036 FFF7FEFF 		bl	alp_append_length_operand
 1994              	.LVL211:
 352:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 1995              		.loc 1 352 3 view .LVU380
 1996 003a AAB2     		uxth	r2, r5
 1997 003c 0699     		ldr	r1, [sp, #24]
 1998 003e 2046     		mov	r0, r4
 1999 0040 FFF7FEFF 		bl	fifo_put
 2000              	.LVL212:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 52


 2001 0044 38B9     		cbnz	r0, .L173
 353:../../shields/Murata/src/alp.c **** }
 2002              		.loc 1 353 1 is_stmt 0 view .LVU381
 2003 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2004              	.LVL213:
 2005              	.L172:
 349:../../shields/Murata/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 2006              		.loc 1 349 3 discriminator 1 view .LVU382
 2007 0048 064B     		ldr	r3, .L174
 2008 004a 074A     		ldr	r2, .L174+4
 2009 004c 40F25D11 		movw	r1, #349
 2010 0050 0648     		ldr	r0, .L174+8
 2011 0052 FFF7FEFF 		bl	__assert_func
 2012              	.LVL214:
 2013              	.L173:
 352:../../shields/Murata/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 2014              		.loc 1 352 3 discriminator 1 view .LVU383
 2015 0056 064B     		ldr	r3, .L174+12
 2016 0058 034A     		ldr	r2, .L174+4
 2017 005a 4FF4B071 		mov	r1, #352
 2018 005e 0348     		ldr	r0, .L174+8
 2019 0060 FFF7FEFF 		bl	__assert_func
 2020              	.LVL215:
 2021              	.L175:
 2022              		.align	2
 2023              	.L174:
 2024 0064 00000000 		.word	.LC35
 2025 0068 00000000 		.word	.LANCHOR13
 2026 006c 40000000 		.word	.LC1
 2027 0070 3C000000 		.word	.LC33
 2028              		.cfi_endproc
 2029              	.LFE20:
 2031              		.section	.text.alp_length_operand_coded_length,"ax",%progbits
 2032              		.align	1
 2033              		.global	alp_length_operand_coded_length
 2034              		.syntax unified
 2035              		.thumb
 2036              		.thumb_func
 2037              		.fpu fpv4-sp-d16
 2039              	alp_length_operand_coded_length:
 2040              	.LVL216:
 2041              	.LFB21:
 354:../../shields/Murata/src/alp.c **** 
 355:../../shields/Murata/src/alp.c **** uint8_t alp_length_operand_coded_length(uint32_t length) {
 2042              		.loc 1 355 58 is_stmt 1 view -0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
 2047              		.loc 1 355 58 is_stmt 0 view .LVU385
 2048 0000 0346     		mov	r3, r0
 356:../../shields/Murata/src/alp.c ****   uint8_t coded_len = 1;
 2049              		.loc 1 356 3 is_stmt 1 view .LVU386
 2050              	.LVL217:
 357:../../shields/Murata/src/alp.c ****   if(length > 0x3F)
 2051              		.loc 1 357 3 view .LVU387
 2052              		.loc 1 357 5 is_stmt 0 view .LVU388
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 53


 2053 0002 3F28     		cmp	r0, #63
 2054 0004 08D8     		bhi	.L180
 356:../../shields/Murata/src/alp.c ****   uint8_t coded_len = 1;
 2055              		.loc 1 356 11 view .LVU389
 2056 0006 0120     		movs	r0, #1
 2057              	.LVL218:
 2058              	.L177:
 358:../../shields/Murata/src/alp.c ****     coded_len = 2;
 359:../../shields/Murata/src/alp.c **** 
 360:../../shields/Murata/src/alp.c ****   if(length > 0x3FFF)
 2059              		.loc 1 360 3 is_stmt 1 view .LVU390
 2060              		.loc 1 360 5 is_stmt 0 view .LVU391
 2061 0008 B3F5804F 		cmp	r3, #16384
 2062 000c 00D3     		bcc	.L178
 361:../../shields/Murata/src/alp.c ****     coded_len = 3;
 2063              		.loc 1 361 15 view .LVU392
 2064 000e 0320     		movs	r0, #3
 2065              	.LVL219:
 2066              	.L178:
 362:../../shields/Murata/src/alp.c **** 
 363:../../shields/Murata/src/alp.c ****   if(length > 0x3FFFFF)
 2067              		.loc 1 363 3 is_stmt 1 view .LVU393
 2068              		.loc 1 363 5 is_stmt 0 view .LVU394
 2069 0010 B3F5800F 		cmp	r3, #4194304
 2070 0014 02D2     		bcs	.L183
 2071              	.LVL220:
 2072              	.L179:
 364:../../shields/Murata/src/alp.c ****     coded_len = 4;
 365:../../shields/Murata/src/alp.c **** 
 366:../../shields/Murata/src/alp.c ****   return coded_len;
 2073              		.loc 1 366 3 is_stmt 1 view .LVU395
 367:../../shields/Murata/src/alp.c **** }
 2074              		.loc 1 367 1 is_stmt 0 view .LVU396
 2075 0016 7047     		bx	lr
 2076              	.LVL221:
 2077              	.L180:
 358:../../shields/Murata/src/alp.c **** 
 2078              		.loc 1 358 15 view .LVU397
 2079 0018 0220     		movs	r0, #2
 2080              	.LVL222:
 358:../../shields/Murata/src/alp.c **** 
 2081              		.loc 1 358 15 view .LVU398
 2082 001a F5E7     		b	.L177
 2083              	.LVL223:
 2084              	.L183:
 364:../../shields/Murata/src/alp.c ****     coded_len = 4;
 2085              		.loc 1 364 15 view .LVU399
 2086 001c 0420     		movs	r0, #4
 2087              	.LVL224:
 364:../../shields/Murata/src/alp.c ****     coded_len = 4;
 2088              		.loc 1 364 15 view .LVU400
 2089 001e FAE7     		b	.L179
 2090              		.cfi_endproc
 2091              	.LFE21:
 2093              		.section	.text.alp_get_expected_response_length,"ax",%progbits
 2094              		.align	1
 2095              		.global	alp_get_expected_response_length
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 54


 2096              		.syntax unified
 2097              		.thumb
 2098              		.thumb_func
 2099              		.fpu fpv4-sp-d16
 2101              	alp_get_expected_response_length:
 2102              	.LVL225:
 2103              	.LFB17:
 281:../../shields/Murata/src/alp.c ****   uint8_t expected_response_length = 0;
 2104              		.loc 1 281 92 is_stmt 1 view -0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 24
 2107              		@ frame_needed = 0, uses_anonymous_args = 0
 281:../../shields/Murata/src/alp.c ****   uint8_t expected_response_length = 0;
 2108              		.loc 1 281 92 is_stmt 0 view .LVU402
 2109 0000 30B5     		push	{r4, r5, lr}
 2110              	.LCFI40:
 2111              		.cfi_def_cfa_offset 12
 2112              		.cfi_offset 4, -12
 2113              		.cfi_offset 5, -8
 2114              		.cfi_offset 14, -4
 2115 0002 87B0     		sub	sp, sp, #28
 2116              	.LCFI41:
 2117              		.cfi_def_cfa_offset 40
 282:../../shields/Murata/src/alp.c ****   fifo_t fifo;
 2118              		.loc 1 282 3 is_stmt 1 view .LVU403
 2119              	.LVL226:
 283:../../shields/Murata/src/alp.c ****   fifo_init_filled(&fifo, alp_command, alp_command_length, alp_command_length + 1);
 2120              		.loc 1 283 3 view .LVU404
 284:../../shields/Murata/src/alp.c **** 
 2121              		.loc 1 284 3 view .LVU405
 2122 0004 0A46     		mov	r2, r1
 2123 0006 4B1C     		adds	r3, r1, #1
 2124 0008 0146     		mov	r1, r0
 2125              	.LVL227:
 284:../../shields/Murata/src/alp.c **** 
 2126              		.loc 1 284 3 is_stmt 0 view .LVU406
 2127 000a 02A8     		add	r0, sp, #8
 2128              	.LVL228:
 284:../../shields/Murata/src/alp.c **** 
 2129              		.loc 1 284 3 view .LVU407
 2130 000c FFF7FEFF 		bl	fifo_init_filled
 2131              	.LVL229:
 286:../../shields/Murata/src/alp.c ****     alp_control_t control;
 2132              		.loc 1 286 3 is_stmt 1 view .LVU408
 282:../../shields/Murata/src/alp.c ****   fifo_t fifo;
 2133              		.loc 1 282 11 is_stmt 0 view .LVU409
 2134 0010 0024     		movs	r4, #0
 286:../../shields/Murata/src/alp.c ****     alp_control_t control;
 2135              		.loc 1 286 8 view .LVU410
 2136 0012 19E0     		b	.L185
 2137              	.LVL230:
 2138              	.L192:
 2139              	.LBB27:
 2140              	.LBB28:
 291:../../shields/Murata/src/alp.c ****         uint32_t offset = alp_parse_length_operand(&fifo); // offset
 2141              		.loc 1 291 9 is_stmt 1 view .LVU411
 2142 0014 0121     		movs	r1, #1
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 55


 2143 0016 02A8     		add	r0, sp, #8
 2144 0018 FFF7FEFF 		bl	fifo_skip
 2145              	.LVL231:
 292:../../shields/Murata/src/alp.c ****         expected_response_length += alp_parse_length_operand(&fifo); // the file length
 2146              		.loc 1 292 9 view .LVU412
 292:../../shields/Murata/src/alp.c ****         expected_response_length += alp_parse_length_operand(&fifo); // the file length
 2147              		.loc 1 292 27 is_stmt 0 view .LVU413
 2148 001c 02A8     		add	r0, sp, #8
 2149 001e FFF7FEFF 		bl	alp_parse_length_operand
 2150              	.LVL232:
 2151 0022 0546     		mov	r5, r0
 2152              	.LVL233:
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2153              		.loc 1 293 9 is_stmt 1 view .LVU414
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2154              		.loc 1 293 37 is_stmt 0 view .LVU415
 2155 0024 02A8     		add	r0, sp, #8
 2156              	.LVL234:
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2157              		.loc 1 293 37 view .LVU416
 2158 0026 FFF7FEFF 		bl	alp_parse_length_operand
 2159              	.LVL235:
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2160              		.loc 1 293 34 view .LVU417
 2161 002a 0444     		add	r4, r4, r0
 2162              	.LVL236:
 293:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2163              		.loc 1 293 34 view .LVU418
 2164 002c E4B2     		uxtb	r4, r4
 2165              	.LVL237:
 294:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 2166              		.loc 1 294 9 is_stmt 1 view .LVU419
 294:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 2167              		.loc 1 294 37 is_stmt 0 view .LVU420
 2168 002e 2046     		mov	r0, r4
 2169 0030 FFF7FEFF 		bl	alp_length_operand_coded_length
 2170              	.LVL238:
 294:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 2171              		.loc 1 294 34 view .LVU421
 2172 0034 0444     		add	r4, r4, r0
 2173              	.LVL239:
 294:../../shields/Murata/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 2174              		.loc 1 294 34 view .LVU422
 2175 0036 E4B2     		uxtb	r4, r4
 2176              	.LVL240:
 295:../../shields/Murata/src/alp.c ****         expected_response_length += 1; // the opcode
 2177              		.loc 1 295 9 is_stmt 1 view .LVU423
 295:../../shields/Murata/src/alp.c ****         expected_response_length += 1; // the opcode
 2178              		.loc 1 295 37 is_stmt 0 view .LVU424
 2179 0038 2846     		mov	r0, r5
 2180 003a FFF7FEFF 		bl	alp_length_operand_coded_length
 2181              	.LVL241:
 295:../../shields/Murata/src/alp.c ****         expected_response_length += 1; // the opcode
 2182              		.loc 1 295 34 view .LVU425
 2183 003e 0130     		adds	r0, r0, #1
 2184 0040 0444     		add	r4, r4, r0
 2185              	.LVL242:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 56


 295:../../shields/Murata/src/alp.c ****         expected_response_length += 1; // the opcode
 2186              		.loc 1 295 34 view .LVU426
 2187 0042 E4B2     		uxtb	r4, r4
 2188              	.LVL243:
 296:../../shields/Murata/src/alp.c ****         break;
 2189              		.loc 1 296 9 is_stmt 1 view .LVU427
 296:../../shields/Murata/src/alp.c ****         break;
 2190              		.loc 1 296 34 is_stmt 0 view .LVU428
 2191 0044 0134     		adds	r4, r4, #1
 2192              	.LVL244:
 296:../../shields/Murata/src/alp.c ****         break;
 2193              		.loc 1 296 34 view .LVU429
 2194 0046 E4B2     		uxtb	r4, r4
 2195              	.LVL245:
 297:../../shields/Murata/src/alp.c ****       case ALP_OP_REQUEST_TAG:
 2196              		.loc 1 297 9 is_stmt 1 view .LVU430
 2197              	.L185:
 297:../../shields/Murata/src/alp.c ****       case ALP_OP_REQUEST_TAG:
 2198              		.loc 1 297 9 is_stmt 0 view .LVU431
 2199              	.LBE28:
 2200              	.LBE27:
 286:../../shields/Murata/src/alp.c ****     alp_control_t control;
 2201              		.loc 1 286 9 view .LVU432
 2202 0048 02A8     		add	r0, sp, #8
 2203 004a FFF7FEFF 		bl	fifo_get_size
 2204              	.LVL246:
 286:../../shields/Murata/src/alp.c ****     alp_control_t control;
 2205              		.loc 1 286 8 view .LVU433
 2206 004e 0028     		cmp	r0, #0
 2207 0050 00F0C980 		beq	.L203
 2208              	.LBB33:
 287:../../shields/Murata/src/alp.c ****     fifo_pop(&fifo, (uint8_t*)&control.raw, 1);
 2209              		.loc 1 287 5 is_stmt 1 view .LVU434
 288:../../shields/Murata/src/alp.c ****     switch(control.operation) {
 2210              		.loc 1 288 5 view .LVU435
 2211 0054 0122     		movs	r2, #1
 2212 0056 6946     		mov	r1, sp
 2213 0058 02A8     		add	r0, sp, #8
 2214 005a FFF7FEFF 		bl	fifo_pop
 2215              	.LVL247:
 289:../../shields/Murata/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 2216              		.loc 1 289 5 view .LVU436
 289:../../shields/Murata/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 2217              		.loc 1 289 19 is_stmt 0 view .LVU437
 2218 005e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 2219 0062 03F03F03 		and	r3, r3, #63
 289:../../shields/Murata/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 2220              		.loc 1 289 5 view .LVU438
 2221 0066 013B     		subs	r3, r3, #1
 2222 0068 332B     		cmp	r3, #51
 2223 006a 00F2B580 		bhi	.L186
 2224 006e 01A2     		adr	r2, .L188
 2225 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2226              		.p2align 2
 2227              	.L188:
 2228 0074 15000000 		.word	.L192+1
 2229 0078 D9010000 		.word	.L186+1
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 57


 2230 007c D9010000 		.word	.L186+1
 2231 0080 4F010000 		.word	.L190+1
 2232 0084 D9010000 		.word	.L186+1
 2233 0088 CF010000 		.word	.L191+1
 2234 008c D9010000 		.word	.L186+1
 2235 0090 D9010000 		.word	.L186+1
 2236 0094 D9010000 		.word	.L186+1
 2237 0098 D9010000 		.word	.L186+1
 2238 009c D9010000 		.word	.L186+1
 2239 00a0 D9010000 		.word	.L186+1
 2240 00a4 D9010000 		.word	.L186+1
 2241 00a8 D9010000 		.word	.L186+1
 2242 00ac D9010000 		.word	.L186+1
 2243 00b0 D9010000 		.word	.L186+1
 2244 00b4 D9010000 		.word	.L186+1
 2245 00b8 D9010000 		.word	.L186+1
 2246 00bc D9010000 		.word	.L186+1
 2247 00c0 D9010000 		.word	.L186+1
 2248 00c4 D9010000 		.word	.L186+1
 2249 00c8 D9010000 		.word	.L186+1
 2250 00cc D9010000 		.word	.L186+1
 2251 00d0 D9010000 		.word	.L186+1
 2252 00d4 D9010000 		.word	.L186+1
 2253 00d8 D9010000 		.word	.L186+1
 2254 00dc D9010000 		.word	.L186+1
 2255 00e0 D9010000 		.word	.L186+1
 2256 00e4 D9010000 		.word	.L186+1
 2257 00e8 D9010000 		.word	.L186+1
 2258 00ec D9010000 		.word	.L186+1
 2259 00f0 4F010000 		.word	.L190+1
 2260 00f4 D9010000 		.word	.L186+1
 2261 00f8 D9010000 		.word	.L186+1
 2262 00fc D9010000 		.word	.L186+1
 2263 0100 D9010000 		.word	.L186+1
 2264 0104 D9010000 		.word	.L186+1
 2265 0108 D9010000 		.word	.L186+1
 2266 010c D9010000 		.word	.L186+1
 2267 0110 D9010000 		.word	.L186+1
 2268 0114 D9010000 		.word	.L186+1
 2269 0118 D9010000 		.word	.L186+1
 2270 011c D9010000 		.word	.L186+1
 2271 0120 D9010000 		.word	.L186+1
 2272 0124 D9010000 		.word	.L186+1
 2273 0128 D9010000 		.word	.L186+1
 2274 012c D9010000 		.word	.L186+1
 2275 0130 D9010000 		.word	.L186+1
 2276 0134 D9010000 		.word	.L186+1
 2277 0138 6D010000 		.word	.L189+1
 2278 013c D9010000 		.word	.L186+1
 2279 0140 45010000 		.word	.L187+1
 2280              		.p2align 1
 2281              	.L187:
 2282              	.LBB32:
 299:../../shields/Murata/src/alp.c ****         break;
 2283              		.loc 1 299 9 is_stmt 1 view .LVU439
 2284 0144 0121     		movs	r1, #1
 2285 0146 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 58


 2286 0148 FFF7FEFF 		bl	fifo_skip
 2287              	.LVL248:
 300:../../shields/Murata/src/alp.c ****       case ALP_OP_RETURN_FILE_DATA:
 2288              		.loc 1 300 9 view .LVU440
 2289 014c 7CE7     		b	.L185
 2290              	.L190:
 303:../../shields/Murata/src/alp.c ****         alp_parse_length_operand(&fifo); // offset
 2291              		.loc 1 303 9 view .LVU441
 2292 014e 0121     		movs	r1, #1
 2293 0150 02A8     		add	r0, sp, #8
 2294 0152 FFF7FEFF 		bl	fifo_skip
 2295              	.LVL249:
 304:../../shields/Murata/src/alp.c ****         fifo_skip(&fifo, alp_parse_length_operand(&fifo));
 2296              		.loc 1 304 9 view .LVU442
 2297 0156 02A8     		add	r0, sp, #8
 2298 0158 FFF7FEFF 		bl	alp_parse_length_operand
 2299              	.LVL250:
 305:../../shields/Murata/src/alp.c ****         break;
 2300              		.loc 1 305 9 view .LVU443
 305:../../shields/Murata/src/alp.c ****         break;
 2301              		.loc 1 305 26 is_stmt 0 view .LVU444
 2302 015c 02A8     		add	r0, sp, #8
 2303 015e FFF7FEFF 		bl	alp_parse_length_operand
 2304              	.LVL251:
 305:../../shields/Murata/src/alp.c ****         break;
 2305              		.loc 1 305 9 view .LVU445
 2306 0162 81B2     		uxth	r1, r0
 2307 0164 02A8     		add	r0, sp, #8
 2308 0166 FFF7FEFF 		bl	fifo_skip
 2309              	.LVL252:
 306:../../shields/Murata/src/alp.c ****       case ALP_OP_FORWARD: ;
 2310              		.loc 1 306 9 is_stmt 1 view .LVU446
 2311 016a 6DE7     		b	.L185
 2312              	.L189:
 307:../../shields/Murata/src/alp.c ****         uint8_t itf_id;
 2313              		.loc 1 307 28 view .LVU447
 308:../../shields/Murata/src/alp.c ****         fifo_pop(&fifo, &itf_id, 1);
 2314              		.loc 1 308 9 view .LVU448
 309:../../shields/Murata/src/alp.c ****         if(itf_id == ALP_ITF_ID_D7ASP) {
 2315              		.loc 1 309 9 view .LVU449
 2316 016c 0122     		movs	r2, #1
 2317 016e 0DF10701 		add	r1, sp, #7
 2318 0172 02A8     		add	r0, sp, #8
 2319 0174 FFF7FEFF 		bl	fifo_pop
 2320              	.LVL253:
 310:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 2321              		.loc 1 310 9 view .LVU450
 310:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 2322              		.loc 1 310 19 is_stmt 0 view .LVU451
 2323 0178 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 310:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 2324              		.loc 1 310 11 view .LVU452
 2325 017c D72B     		cmp	r3, #215
 2326 017e 7FF463AF 		bne	.L185
 2327              	.LBB29:
 311:../../shields/Murata/src/alp.c ****           d7ap_addressee_ctrl_t addressee_ctrl;
 2328              		.loc 1 311 11 is_stmt 1 view .LVU453
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 59


 2329 0182 0121     		movs	r1, #1
 2330 0184 02A8     		add	r0, sp, #8
 2331 0186 FFF7FEFF 		bl	fifo_skip
 2332              	.LVL254:
 312:../../shields/Murata/src/alp.c ****           fifo_pop(&fifo, (uint8_t*)&addressee_ctrl.raw, 1);
 2333              		.loc 1 312 11 view .LVU454
 313:../../shields/Murata/src/alp.c ****           fifo_skip(&fifo, 2 + d7ap_addressee_id_length(addressee_ctrl.id_type)); // skip addressee
 2334              		.loc 1 313 11 view .LVU455
 2335 018a 0122     		movs	r2, #1
 2336 018c 01A9     		add	r1, sp, #4
 2337 018e 02A8     		add	r0, sp, #8
 2338 0190 FFF7FEFF 		bl	fifo_pop
 2339              	.LVL255:
 314:../../shields/Murata/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 2340              		.loc 1 314 11 view .LVU456
 314:../../shields/Murata/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 2341              		.loc 1 314 71 is_stmt 0 view .LVU457
 2342 0194 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2343 0198 C3F30113 		ubfx	r3, r3, #4, #2
 2344              	.LVL256:
 2345              	.LBB30:
 2346              	.LBI30:
 290:../../shields/Murata/inc/d7ap.h ****   switch(id_type)
 2347              		.loc 2 290 23 is_stmt 1 view .LVU458
 2348              	.LBB31:
 291:../../shields/Murata/inc/d7ap.h ****   {
 2349              		.loc 2 291 3 view .LVU459
 2350 019c 032B     		cmp	r3, #3
 2351 019e 07D8     		bhi	.L194
 2352 01a0 DFE803F0 		tbb	[pc, r3]
 2353              	.L196:
 2354 01a4 0F       		.byte	(.L201-.L196)/2
 2355 01a5 0D       		.byte	(.L198-.L196)/2
 2356 01a6 02       		.byte	(.L197-.L196)/2
 2357 01a7 04       		.byte	(.L195-.L196)/2
 2358              		.p2align 1
 2359              	.L197:
 298:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 2360              		.loc 2 298 9 view .LVU460
 298:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 2361              		.loc 2 298 16 is_stmt 0 view .LVU461
 2362 01a8 0821     		movs	r1, #8
 2363 01aa 0BE0     		b	.L199
 2364              	.L195:
 300:../../shields/Murata/inc/d7ap.h ****       default:
 2365              		.loc 2 300 9 is_stmt 1 view .LVU462
 300:../../shields/Murata/inc/d7ap.h ****       default:
 2366              		.loc 2 300 16 is_stmt 0 view .LVU463
 2367 01ac 0221     		movs	r1, #2
 2368 01ae 09E0     		b	.L199
 2369              	.L194:
 2370              		.loc 2 302 9 is_stmt 1 view .LVU464
 2371 01b0 0E4B     		ldr	r3, .L204
 2372 01b2 0F4A     		ldr	r2, .L204+4
 2373 01b4 4FF49771 		mov	r1, #302
 2374 01b8 0E48     		ldr	r0, .L204+8
 2375 01ba FFF7FEFF 		bl	__assert_func
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 60


 2376              	.LVL257:
 2377              	.L198:
 294:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 2378              		.loc 2 294 16 is_stmt 0 view .LVU465
 2379 01be 0021     		movs	r1, #0
 2380 01c0 00E0     		b	.L199
 2381              	.L201:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 2382              		.loc 2 296 16 view .LVU466
 2383 01c2 0121     		movs	r1, #1
 2384              	.L199:
 2385              	.LVL258:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 2386              		.loc 2 296 16 view .LVU467
 2387              	.LBE31:
 2388              	.LBE30:
 314:../../shields/Murata/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 2389              		.loc 1 314 11 view .LVU468
 2390 01c4 0231     		adds	r1, r1, #2
 2391 01c6 02A8     		add	r0, sp, #8
 2392 01c8 FFF7FEFF 		bl	fifo_skip
 2393              	.LVL259:
 2394 01cc 3CE7     		b	.L185
 2395              	.L191:
 2396              	.LBE29:
 320:../../shields/Murata/src/alp.c ****         break;
 2397              		.loc 1 320 9 is_stmt 1 view .LVU469
 2398 01ce 0D21     		movs	r1, #13
 2399 01d0 02A8     		add	r0, sp, #8
 2400 01d2 FFF7FEFF 		bl	fifo_skip
 2401              	.LVL260:
 321:../../shields/Murata/src/alp.c ****       // TODO other operations
 2402              		.loc 1 321 9 view .LVU470
 321:../../shields/Murata/src/alp.c ****       // TODO other operations
 2403              		.loc 1 321 9 is_stmt 0 view .LVU471
 2404 01d6 37E7     		b	.L185
 2405              	.L186:
 324:../../shields/Murata/src/alp.c ****         assert(false);
 2406              		.loc 1 324 59 is_stmt 1 view .LVU472
 325:../../shields/Murata/src/alp.c ****     }
 2407              		.loc 1 325 9 view .LVU473
 2408 01d8 044B     		ldr	r3, .L204
 2409 01da 074A     		ldr	r2, .L204+12
 2410 01dc 40F24511 		movw	r1, #325
 2411 01e0 0648     		ldr	r0, .L204+16
 2412 01e2 FFF7FEFF 		bl	__assert_func
 2413              	.LVL261:
 2414              	.L203:
 2415              	.LBE32:
 2416              	.LBE33:
 329:../../shields/Murata/src/alp.c ****   return expected_response_length;
 2417              		.loc 1 329 70 view .LVU474
 330:../../shields/Murata/src/alp.c **** }
 2418              		.loc 1 330 3 view .LVU475
 331:../../shields/Murata/src/alp.c **** 
 2419              		.loc 1 331 1 is_stmt 0 view .LVU476
 2420 01e6 2046     		mov	r0, r4
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 61


 2421 01e8 07B0     		add	sp, sp, #28
 2422              	.LCFI42:
 2423              		.cfi_def_cfa_offset 12
 2424              		@ sp needed
 2425 01ea 30BD     		pop	{r4, r5, pc}
 2426              	.LVL262:
 2427              	.L205:
 331:../../shields/Murata/src/alp.c **** 
 2428              		.loc 1 331 1 view .LVU477
 2429              		.align	2
 2430              	.L204:
 2431 01ec 38000000 		.word	.LC4
 2432 01f0 00000000 		.word	.LANCHOR2
 2433 01f4 40000000 		.word	.LC5
 2434 01f8 00000000 		.word	.LANCHOR14
 2435 01fc 40000000 		.word	.LC1
 2436              		.cfi_endproc
 2437              	.LFE17:
 2439              		.section	.rodata.__func__.6325,"a"
 2440              		.align	2
 2441              		.set	.LANCHOR2,. + 0
 2444              	__func__.6325:
 2445 0000 64376170 		.ascii	"d7ap_addressee_id_length\000"
 2445      5F616464 
 2445      72657373 
 2445      65655F69 
 2445      645F6C65 
 2446              		.section	.rodata.__func__.6757,"a"
 2447              		.align	2
 2448              		.set	.LANCHOR3,. + 0
 2451              	__func__.6757:
 2452 0000 616C705F 		.ascii	"alp_append_length_operand\000"
 2452      61707065 
 2452      6E645F6C 
 2452      656E6774 
 2452      685F6F70 
 2453              		.section	.rodata.__func__.6767,"a"
 2454              		.align	2
 2455              		.set	.LANCHOR4,. + 0
 2458              	__func__.6767:
 2459 0000 616C705F 		.ascii	"alp_parse_file_offset_operand\000"
 2459      70617273 
 2459      655F6669 
 2459      6C655F6F 
 2459      66667365 
 2460              		.section	.rodata.__func__.6773,"a"
 2461              		.align	2
 2462              		.set	.LANCHOR6,. + 0
 2465              	__func__.6773:
 2466 0000 616C705F 		.ascii	"alp_parse_file_header_operand\000"
 2466      70617273 
 2466      655F6669 
 2466      6C655F68 
 2466      65616465 
 2467              		.section	.rodata.__func__.6779,"a"
 2468              		.align	2
 2469              		.set	.LANCHOR7,. + 0
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 62


 2472              	__func__.6779:
 2473 0000 616C705F 		.ascii	"alp_append_file_offset_operand\000"
 2473      61707065 
 2473      6E645F66 
 2473      696C655F 
 2473      6F666673 
 2474              		.section	.rodata.__func__.6786,"a"
 2475              		.align	2
 2476              		.set	.LANCHOR8,. + 0
 2479              	__func__.6786:
 2480 0000 616C705F 		.ascii	"alp_append_forward_action\000"
 2480      61707065 
 2480      6E645F66 
 2480      6F727761 
 2480      72645F61 
 2481              		.section	.rodata.__func__.6799,"a"
 2482              		.align	2
 2483              		.set	.LANCHOR9,. + 0
 2486              	__func__.6799:
 2487 0000 616C705F 		.ascii	"alp_append_return_file_data_action\000"
 2487      61707065 
 2487      6E645F72 
 2487      65747572 
 2487      6E5F6669 
 2488              		.section	.rodata.__func__.6821,"a"
 2489              		.align	2
 2490              		.set	.LANCHOR5,. + 0
 2493              	__func__.6821:
 2494 0000 70617273 		.ascii	"parse_operand_file_data\000"
 2494      655F6F70 
 2494      6572616E 
 2494      645F6669 
 2494      6C655F64 
 2495              		.section	.rodata.__func__.6836,"a"
 2496              		.align	2
 2497              		.set	.LANCHOR0,. + 0
 2500              	__func__.6836:
 2501 0000 70617273 		.ascii	"parse_op_return_tag\000"
 2501      655F6F70 
 2501      5F726574 
 2501      75726E5F 
 2501      74616700 
 2502              		.section	.rodata.__func__.6843,"a"
 2503              		.align	2
 2504              		.set	.LANCHOR1,. + 0
 2507              	__func__.6843:
 2508 0000 70617273 		.ascii	"parse_op_return_status\000"
 2508      655F6F70 
 2508      5F726574 
 2508      75726E5F 
 2508      73746174 
 2509              		.section	.rodata.__func__.6853,"a"
 2510              		.align	2
 2511              		.set	.LANCHOR10,. + 0
 2514              	__func__.6853:
 2515 0000 616C705F 		.ascii	"alp_parse_action\000"
 2515      70617273 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 63


 2515      655F6163 
 2515      74696F6E 
 2515      00
 2516              		.section	.rodata.__func__.6880,"a"
 2517              		.align	2
 2518              		.set	.LANCHOR14,. + 0
 2521              	__func__.6880:
 2522 0000 616C705F 		.ascii	"alp_get_expected_response_length\000"
 2522      6765745F 
 2522      65787065 
 2522      63746564 
 2522      5F726573 
 2523              		.section	.rodata.__func__.6890,"a"
 2524              		.align	2
 2525              		.set	.LANCHOR11,. + 0
 2528              	__func__.6890:
 2529 0000 616C705F 		.ascii	"alp_append_tag_request_action\000"
 2529      61707065 
 2529      6E645F74 
 2529      61675F72 
 2529      65717565 
 2530              		.section	.rodata.__func__.6900,"a"
 2531              		.align	2
 2532              		.set	.LANCHOR12,. + 0
 2535              	__func__.6900:
 2536 0000 616C705F 		.ascii	"alp_append_read_file_data_action\000"
 2536      61707065 
 2536      6E645F72 
 2536      6561645F 
 2536      66696C65 
 2537              		.section	.rodata.__func__.6911,"a"
 2538              		.align	2
 2539              		.set	.LANCHOR13,. + 0
 2542              	__func__.6911:
 2543 0000 616C705F 		.ascii	"alp_append_write_file_data_action\000"
 2543      61707065 
 2543      6E645F77 
 2543      72697465 
 2543      5F66696C 
 2544              		.section	.rodata.alp_append_file_offset_operand.str1.4,"aMS",%progbits,1
 2545              		.align	2
 2546              	.LC12:
 2547 0000 6669666F 		.ascii	"fifo_put_byte(fifo, file_id) == oss7SUCCESS\000"
 2547      5F707574 
 2547      5F627974 
 2547      65286669 
 2547      666F2C20 
 2548              		.section	.rodata.alp_append_forward_action.str1.4,"aMS",%progbits,1
 2549              		.align	2
 2550              	.LC13:
 2551 0000 636F6E66 		.ascii	"config!=NULL\000"
 2551      6967213D 
 2551      4E554C4C 
 2551      00
 2552 000d 000000   		.space	3
 2553              	.LC14:
 2554 0010 6669666F 		.ascii	"fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS\000"
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 64


 2554      5F707574 
 2554      5F627974 
 2554      65286669 
 2554      666F2C20 
 2555 0043 00       		.space	1
 2556              	.LC15:
 2557 0044 6669666F 		.ascii	"fifo_put_byte(fifo, itf_id) == oss7SUCCESS\000"
 2557      5F707574 
 2557      5F627974 
 2557      65286669 
 2557      666F2C20 
 2558 006f 00       		.space	1
 2559              	.LC16:
 2560 0070 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2560      5F707574 
 2560      5F627974 
 2560      65286669 
 2560      666F2C20 
 2561 00a3 292D3E71 		.ascii	")->qos.raw) == oss7SUCCESS\000"
 2561      6F732E72 
 2561      61772920 
 2561      3D3D206F 
 2561      73733753 
 2562 00be 0000     		.space	2
 2563              	.LC17:
 2564 00c0 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2564      5F707574 
 2564      5F627974 
 2564      65286669 
 2564      666F2C20 
 2565 00f3 292D3E64 		.ascii	")->dormant_timeout) == oss7SUCCESS\000"
 2565      6F726D61 
 2565      6E745F74 
 2565      696D656F 
 2565      75742920 
 2566 0116 0000     		.space	2
 2567              	.LC18:
 2568 0118 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2568      5F707574 
 2568      5F627974 
 2568      65286669 
 2568      666F2C20 
 2569 014b 292D3E61 		.ascii	")->addressee.ctrl.raw) == oss7SUCCESS\000"
 2569      64647265 
 2569      73736565 
 2569      2E637472 
 2569      6C2E7261 
 2570 0171 000000   		.space	3
 2571              	.LC19:
 2572 0174 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2572      5F707574 
 2572      5F627974 
 2572      65286669 
 2572      666F2C20 
 2573 01a7 292D3E61 		.ascii	")->addressee.access_class) == oss7SUCCESS\000"
 2573      64647265 
 2573      73736565 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 65


 2573      2E616363 
 2573      6573735F 
 2574 01d1 000000   		.space	3
 2575              	.LC20:
 2576 01d4 6669666F 		.ascii	"fifo_put(fifo, ((d7ap_session_config_t*)config)->ad"
 2576      5F707574 
 2576      28666966 
 2576      6F2C2028 
 2576      28643761 
 2577 0207 64726573 		.ascii	"dressee.id, id_length) == oss7SUCCESS\000"
 2577      7365652E 
 2577      69642C20 
 2577      69645F6C 
 2577      656E6774 
 2578 022d 000000   		.space	3
 2579              	.LC21:
 2580 0230 6669666F 		.ascii	"fifo_put_byte(fifo, control_byte) == oss7SUCCESS\000"
 2580      5F707574 
 2580      5F627974 
 2580      65286669 
 2580      666F2C20 
 2581 0261 000000   		.space	3
 2582              	.LC22:
 2583 0264 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_abp_t*"
 2583      5F707574 
 2583      5F627974 
 2583      65286669 
 2583      666F2C20 
 2584 0297 29636F6E 		.ascii	")config)->application_port) == oss7SUCCESS\000"
 2584      66696729 
 2584      2D3E6170 
 2584      706C6963 
 2584      6174696F 
 2585 02c2 0000     		.space	2
 2586              	.LC23:
 2587 02c4 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_abp_t*)conf"
 2587      5F707574 
 2587      28666966 
 2587      6F2C2028 
 2587      286C6F72 
 2588 02f7 6967292D 		.ascii	"ig)->nwkSKey, 16) == oss7SUCCESS\000"
 2588      3E6E776B 
 2588      534B6579 
 2588      2C203136 
 2588      29203D3D 
 2589              	.LC24:
 2590 0318 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_abp_t*)conf"
 2590      5F707574 
 2590      28666966 
 2590      6F2C2028 
 2590      286C6F72 
 2591 034b 6967292D 		.ascii	"ig)->appSKey, 16) == oss7SUCCESS\000"
 2591      3E617070 
 2591      534B6579 
 2591      2C203136 
 2591      29203D3D 
 2592              	.LC25:
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 66


 2593 036c 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCE"
 2593      5F707574 
 2593      28666966 
 2593      6F2C2028 
 2593      75696E74 
 2594 039f 535300   		.ascii	"SS\000"
 2595 03a2 0000     		.space	2
 2596              	.LC26:
 2597 03a4 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&network_id, 4) == oss7SUC"
 2597      5F707574 
 2597      28666966 
 2597      6F2C2028 
 2597      75696E74 
 2598 03d7 43455353 		.ascii	"CESS\000"
 2598      00
 2599              	.LC27:
 2600 03dc 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_otaa_t"
 2600      5F707574 
 2600      5F627974 
 2600      65286669 
 2600      666F2C20 
 2601 040f 2A29636F 		.ascii	"*)config)->application_port) == oss7SUCCESS\000"
 2601      6E666967 
 2601      292D3E61 
 2601      70706C69 
 2601      63617469 
 2602 043b 00       		.space	1
 2603              	.LC28:
 2604 043c 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2604      5F707574 
 2604      28666966 
 2604      6F2C2028 
 2604      286C6F72 
 2605 046f 66696729 		.ascii	"fig)->devEUI, 8) == oss7SUCCESS\000"
 2605      2D3E6465 
 2605      76455549 
 2605      2C203829 
 2605      203D3D20 
 2606 048f 00       		.space	1
 2607              	.LC29:
 2608 0490 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2608      5F707574 
 2608      28666966 
 2608      6F2C2028 
 2608      286C6F72 
 2609 04c3 66696729 		.ascii	"fig)->appEUI, 8) == oss7SUCCESS\000"
 2609      2D3E6170 
 2609      70455549 
 2609      2C203829 
 2609      203D3D20 
 2610 04e3 00       		.space	1
 2611              	.LC30:
 2612 04e4 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2612      5F707574 
 2612      28666966 
 2612      6F2C2028 
 2612      286C6F72 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 67


 2613 0517 66696729 		.ascii	"fig)->appKey, 16) == oss7SUCCESS\000"
 2613      2D3E6170 
 2613      704B6579 
 2613      2C203136 
 2613      29203D3D 
 2614              	.LC31:
 2615 0538 6669666F 		.ascii	"fifo_put(fifo, config, config_len) == oss7SUCCESS\000"
 2615      5F707574 
 2615      28666966 
 2615      6F2C2063 
 2615      6F6E6669 
 2616              		.section	.rodata.alp_append_length_operand.str1.4,"aMS",%progbits,1
 2617              		.align	2
 2618              	.LC7:
 2619 0000 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&length, 1) == oss7SUCCESS"
 2619      5F707574 
 2619      28666966 
 2619      6F2C2028 
 2619      75696E74 
 2620 0033 00       		.ascii	"\000"
 2621              	.LC8:
 2622 0034 6669666F 		.ascii	"fifo_put(fifo, &byte, 1) == oss7SUCCESS\000"
 2622      5F707574 
 2622      28666966 
 2622      6F2C2026 
 2622      62797465 
 2623              	.LC9:
 2624 005c 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7"
 2624      5F707574 
 2624      28666966 
 2624      6F2C2028 
 2624      75696E74 
 2625 008f 53554343 		.ascii	"SUCCESS\000"
 2625      45535300 
 2626              		.section	.rodata.alp_append_return_file_data_action.str1.4,"aMS",%progbits,1
 2627              		.align	2
 2628              	.LC32:
 2629 0000 6669666F 		.ascii	"fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss"
 2629      5F707574 
 2629      5F627974 
 2629      65286669 
 2629      666F2C20 
 2630 0033 37535543 		.ascii	"7SUCCESS\000"
 2630      43455353 
 2630      00
 2631              	.LC33:
 2632 003c 6669666F 		.ascii	"fifo_put(fifo, data, length) == oss7SUCCESS\000"
 2632      5F707574 
 2632      28666966 
 2632      6F2C2064 
 2632      6174612C 
 2633              		.section	.rodata.alp_append_tag_request_action.str1.4,"aMS",%progbits,1
 2634              		.align	2
 2635              	.LC35:
 2636 0000 6669666F 		.ascii	"fifo_put_byte(fifo, op) == oss7SUCCESS\000"
 2636      5F707574 
 2636      5F627974 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 68


 2636      65286669 
 2636      666F2C20 
 2637 0027 00       		.space	1
 2638              	.LC36:
 2639 0028 6669666F 		.ascii	"fifo_put_byte(fifo, tag_id) == oss7SUCCESS\000"
 2639      5F707574 
 2639      5F627974 
 2639      65286669 
 2639      666F2C20 
 2640              		.section	.rodata.alp_parse_action.str1.4,"aMS",%progbits,1
 2641              		.align	2
 2642              	.LC34:
 2643 0000 6669666F 		.ascii	"fifo_pop(fifo, &op, 1) == oss7SUCCESS\000"
 2643      5F706F70 
 2643      28666966 
 2643      6F2C2026 
 2643      6F702C20 
 2644              		.section	.rodata.alp_parse_file_offset_operand.str1.4,"aMS",%progbits,1
 2645              		.align	2
 2646              	.LC10:
 2647 0000 65727220 		.ascii	"err == oss7SUCCESS\000"
 2647      3D3D206F 
 2647      73733753 
 2647      55434345 
 2647      535300
 2648              		.section	.rodata.parse_op_return_status.str1.4,"aMS",%progbits,1
 2649              		.align	2
 2650              	.LC2:
 2651 0000 62362026 		.ascii	"b6 && !b7\000"
 2651      26202162 
 2651      3700
 2652 000a 0000     		.space	2
 2653              	.LC3:
 2654 000c 6669666F 		.ascii	"fifo_pop(fifo, &itf_id, 1) == oss7SUCCESS\000"
 2654      5F706F70 
 2654      28666966 
 2654      6F2C2026 
 2654      6974665F 
 2655 0036 0000     		.space	2
 2656              	.LC4:
 2657 0038 66616C73 		.ascii	"false\000"
 2657      6500
 2658 003e 0000     		.space	2
 2659              	.LC5:
 2660 0040 2E2E2F2E 		.ascii	"../../shields/Murata/inc/d7ap.h\000"
 2660      2E2F7368 
 2660      69656C64 
 2660      732F4D75 
 2660      72617461 
 2661              	.LC6:
 2662 0060 6669666F 		.ascii	"fifo_pop(fifo, interface_status.addressee.id, addre"
 2662      5F706F70 
 2662      28666966 
 2662      6F2C2069 
 2662      6E746572 
 2663 0093 73736565 		.ascii	"ssee_len) == oss7SUCCESS\000"
 2663      5F6C656E 
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 69


 2663      29203D3D 
 2663      206F7373 
 2663      37535543 
 2664              		.section	.rodata.parse_op_return_tag.str1.4,"aMS",%progbits,1
 2665              		.align	2
 2666              	.LC0:
 2667 0000 6669666F 		.ascii	"fifo_pop(fifo, &action->tag_response.tag_id, 1) == "
 2667      5F706F70 
 2667      28666966 
 2667      6F2C2026 
 2667      61637469 
 2668 0033 6F737337 		.ascii	"oss7SUCCESS\000"
 2668      53554343 
 2668      45535300 
 2669 003f 00       		.space	1
 2670              	.LC1:
 2671 0040 2E2E2F2E 		.ascii	"../../shields/Murata/src/alp.c\000"
 2671      2E2F7368 
 2671      69656C64 
 2671      732F4D75 
 2671      72617461 
 2672              		.section	.rodata.parse_operand_file_data.str1.4,"aMS",%progbits,1
 2673              		.align	2
 2674              	.LC11:
 2675 0000 61637469 		.ascii	"action->file_data_operand.provided_data_length <= s"
 2675      6F6E2D3E 
 2675      66696C65 
 2675      5F646174 
 2675      615F6F70 
 2676 0033 697A656F 		.ascii	"izeof(action->file_data_operand.data)\000"
 2676      66286163 
 2676      74696F6E 
 2676      2D3E6669 
 2676      6C655F64 
 2677              		.text
 2678              	.Letext0:
 2679              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 2680              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2681              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2682              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2683              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2684              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2685              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 2686              		.file 10 "../../shields/Murata/inc/types.h"
 2687              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 2688              		.file 12 "../../shields/Murata/inc/lorawan_stack.h"
 2689              		.file 13 "../../shields/Murata/inc/dae.h"
 2690              		.file 14 "../../shields/Murata/inc/fifo.h"
 2691              		.file 15 "../../shields/Murata/inc/alp.h"
 2692              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 70


DEFINED SYMBOLS
                            *ABS*:00000000 alp.c
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:18     .text.parse_op_return_tag:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:25     .text.parse_op_return_tag:00000000 parse_op_return_tag
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:69     .text.parse_op_return_tag:00000020 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:76     .text.parse_op_return_status:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:82     .text.parse_op_return_status:00000000 parse_op_return_status
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:274    .text.parse_op_return_status:000000fc $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:278    .text.parse_op_return_status:00000100 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:356    .text.parse_op_return_status:0000015c $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:368    .text.alp_get_operation:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:375    .text.alp_get_operation:00000000 alp_get_operation
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:396    .text.alp_parse_length_operand:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:403    .text.alp_parse_length_operand:00000000 alp_parse_length_operand
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:473    .text.alp_append_length_operand:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:480    .text.alp_append_length_operand:00000000 alp_append_length_operand
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:622    .text.alp_append_length_operand:00000090 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:631    .text.alp_parse_file_offset_operand:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:638    .text.alp_parse_file_offset_operand:00000000 alp_parse_file_offset_operand
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:709    .text.alp_parse_file_offset_operand:00000038 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:716    .text.parse_operand_file_data:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:722    .text.parse_operand_file_data:00000000 parse_operand_file_data
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:794    .text.parse_operand_file_data:00000044 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:801    .text.parse_op_write_file_data:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:807    .text.parse_op_write_file_data:00000000 parse_op_write_file_data
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:830    .text.parse_op_return_file_data:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:836    .text.parse_op_return_file_data:00000000 parse_op_return_file_data
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:859    .text.alp_parse_file_header_operand:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:866    .text.alp_parse_file_header_operand:00000000 alp_parse_file_header_operand
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:967    .text.alp_parse_file_header_operand:00000064 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:974    .text.alp_append_file_offset_operand:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:981    .text.alp_append_file_offset_operand:00000000 alp_append_file_offset_operand
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1022   .text.alp_append_file_offset_operand:00000024 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1029   .text.alp_append_forward_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1036   .text.alp_append_forward_action:00000000 alp_append_forward_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1172   .text.alp_append_forward_action:00000092 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1177   .text.alp_append_forward_action:00000096 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1478   .text.alp_append_forward_action:0000023c $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1506   .text.alp_append_return_file_data_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1513   .text.alp_append_return_file_data_action:00000000 alp_append_return_file_data_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1595   .text.alp_append_return_file_data_action:00000060 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1604   .text.alp_parse_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1611   .text.alp_parse_action:00000000 alp_parse_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1663   .text.alp_parse_action:00000032 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1696   .text.alp_parse_action:00000052 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1766   .text.alp_parse_action:00000098 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1774   .text.alp_append_tag_request_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1781   .text.alp_append_tag_request_action:00000000 alp_append_tag_request_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1842   .text.alp_append_tag_request_action:00000040 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1850   .text.alp_append_read_file_data_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1857   .text.alp_append_read_file_data_action:00000000 alp_append_read_file_data_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1926   .text.alp_append_read_file_data_action:0000004c $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1933   .text.alp_append_write_file_data_action:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:1940   .text.alp_append_write_file_data_action:00000000 alp_append_write_file_data_action
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2024   .text.alp_append_write_file_data_action:00000064 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2032   .text.alp_length_operand_coded_length:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2039   .text.alp_length_operand_coded_length:00000000 alp_length_operand_coded_length
ARM GAS  C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s 			page 71


C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2094   .text.alp_get_expected_response_length:00000000 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2101   .text.alp_get_expected_response_length:00000000 alp_get_expected_response_length
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2228   .text.alp_get_expected_response_length:00000074 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2280   .text.alp_get_expected_response_length:00000144 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2354   .text.alp_get_expected_response_length:000001a4 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2358   .text.alp_get_expected_response_length:000001a8 $t
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2431   .text.alp_get_expected_response_length:000001ec $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2440   .rodata.__func__.6325:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2444   .rodata.__func__.6325:00000000 __func__.6325
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2447   .rodata.__func__.6757:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2451   .rodata.__func__.6757:00000000 __func__.6757
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2454   .rodata.__func__.6767:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2458   .rodata.__func__.6767:00000000 __func__.6767
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2461   .rodata.__func__.6773:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2465   .rodata.__func__.6773:00000000 __func__.6773
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2468   .rodata.__func__.6779:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2472   .rodata.__func__.6779:00000000 __func__.6779
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2475   .rodata.__func__.6786:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2479   .rodata.__func__.6786:00000000 __func__.6786
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2482   .rodata.__func__.6799:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2486   .rodata.__func__.6799:00000000 __func__.6799
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2489   .rodata.__func__.6821:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2493   .rodata.__func__.6821:00000000 __func__.6821
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2496   .rodata.__func__.6836:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2500   .rodata.__func__.6836:00000000 __func__.6836
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2503   .rodata.__func__.6843:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2507   .rodata.__func__.6843:00000000 __func__.6843
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2510   .rodata.__func__.6853:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2514   .rodata.__func__.6853:00000000 __func__.6853
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2517   .rodata.__func__.6880:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2521   .rodata.__func__.6880:00000000 __func__.6880
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2524   .rodata.__func__.6890:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2528   .rodata.__func__.6890:00000000 __func__.6890
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2531   .rodata.__func__.6900:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2535   .rodata.__func__.6900:00000000 __func__.6900
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2538   .rodata.__func__.6911:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2542   .rodata.__func__.6911:00000000 __func__.6911
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2545   .rodata.alp_append_file_offset_operand.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2549   .rodata.alp_append_forward_action.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2617   .rodata.alp_append_length_operand.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2627   .rodata.alp_append_return_file_data_action.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2634   .rodata.alp_append_tag_request_action.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2641   .rodata.alp_parse_action.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2645   .rodata.alp_parse_file_offset_operand.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2649   .rodata.parse_op_return_status.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2665   .rodata.parse_op_return_tag.str1.4:00000000 $d
C:\Users\yvesk\AppData\Local\Temp\ccseo5zM.s:2673   .rodata.parse_operand_file_data.str1.4:00000000 $d

UNDEFINED SYMBOLS
fifo_pop
__assert_func
fifo_skip
fifo_put
fifo_put_byte
fifo_init_filled
fifo_get_size
